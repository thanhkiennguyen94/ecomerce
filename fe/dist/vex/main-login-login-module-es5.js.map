{"version":3,"sources":["webpack:///src/app/main/login/login.module.ts","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/snack-bar.js","webpack:///node_modules/@iconify/icons-ic/twotone-visibility-off.js","webpack:///src/app/main/login/login.component.ts","webpack:///src/app/main/login/login.component.html","webpack:///node_modules/@iconify/icons-ic/twotone-visibility.js","webpack:///src/@vex/animations/fade-in-up.animation.ts"],"names":["routes","path","component","LoginModule","forChild","_c0","_c1","enterDuration","_c2","MAT_CHECKBOX_DEFAULT_OPTIONS","providedIn","factory","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","color","clickAction","nextUniqueId","defaults","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatCheckbox","multi","MatCheckboxChange","MatCheckboxBase","_elementRef","_MatCheckboxMixinBase","elementRef","_changeDetectorRef","_focusMonitor","_ngZone","tabIndex","_animationMode","_options","ariaLabel","ariaLabelledby","_uniqueId","id","labelPosition","name","change","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_checked","_disabled","_indeterminate","defaultColor","parseInt","_required","value","monitor","subscribe","focusOrigin","Promise","resolve","then","markForCheck","_syncIndeterminate","stopMonitoring","checked","newValue","disabled","changed","_transitionCheckState","emit","disableRipple","detectChanges","fn","isDisabled","indeterminate","newState","oldState","element","nativeElement","length","classList","remove","_getAnimationClassForCheckStateTransition","add","animationClass","runOutsideAngular","setTimeout","event","source","_a","stopPropagation","toggle","_emitChangeEvent","_inputElement","origin","options","focusVia","focus","animSuffix","nativeCheckbox","ɵfac","MatCheckbox_Factory","t","ɵcmp","type","selectors","viewQuery","MatCheckbox_Query","rf","ctx","_t","first","ripple","hostAttrs","hostVars","hostBindings","MatCheckbox_HostBindings","inputs","required","ariaDescribedby","outputs","exportAs","features","ngContentSelectors","decls","vars","consts","template","MatCheckbox_Template","MatCheckbox_Template_input_change_3_listener","$event","_onInteractionEvent","MatCheckbox_Template_input_click_3_listener","_onInputClick","MatCheckbox_Template_span_cdkObserveContent_12_listener","_onLabelTextChange","_r0","_r2","inputId","textContent","trim","_getAriaChecked","_isRippleDisabled","directives","styles","encapsulation","changeDetection","ctorParameters","String","decorators","args","undefined","propDecorators","ngDevMode","selector","host","providers","None","OnPush","MAT_CHECKBOX_REQUIRED_VALIDATOR","MatCheckboxRequiredValidator","MatCheckboxRequiredValidator_Factory","ɵMatCheckboxRequiredValidator_BaseFactory","ɵdir","_MatCheckboxRequiredValidatorModule","_MatCheckboxRequiredValidatorModule_Factory","ɵmod","ɵinj","ngJitMode","declarations","exports","MatCheckboxModule","MatCheckboxModule_Factory","imports","SimpleSnackBar_div_2_Template","SimpleSnackBar_div_2_Template_button_click_1_listener","ctx_r1","action","ctx_r0","data","MatSnackBarContainer_ng_template_1_Template","MAT_SNACK_BAR_DATA","MatSnackBarConfig","politeness","announcementMessage","duration","horizontalPosition","verticalPosition","MAX_TIMEOUT","Math","pow","MatSnackBarRef","containerInstance","_overlayRef","_afterDismissed","_afterOpened","_onAction","_dismissedByAction","onAction","dismiss","_onExit","_finishDismiss","closed","exit","clearTimeout","_durationTimeoutId","next","complete","dismissWithAction","min","dispose","dismissedByAction","_onEnter","SimpleSnackBar","snackBarRef","SimpleSnackBar_Factory","SimpleSnackBar_Template","message","hasAction","matSnackBarAnimations","snackBarState","transform","opacity","MatSnackBarContainer","_platform","snackBarConfig","_announceDelay","_destroyed","_onAnnounce","_animationState","attachDomPortal","portal","_assertNotAttached","_applySnackBarClasses","_portalOutlet","_live","FIREFOX","_role","attachComponentPortal","attachTemplatePortal","fromState","toState","_completeExit","onEnter","run","_screenReaderAnnounce","setAttribute","_announceTimeoutId","onMicrotaskEmpty","pipe","panelClasses","panelClass","Array","isArray","forEach","cssClass","hasAttached","Error","inertElement","querySelector","liveElement","focusedElement","isBrowser","document","activeElement","HTMLElement","contains","removeAttribute","appendChild","MatSnackBarContainer_Factory","MatSnackBarContainer_Query","MatSnackBarContainer_HostBindings","MatSnackBarContainer_animation_state_done_HostBindingHandler","onAnimationEnd","MatSnackBarContainer_Template","animation","Default","animations","MatSnackBarModule","MatSnackBarModule_Factory","entryComponents","MAT_SNACK_BAR_DEFAULT_OPTIONS","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MatSnackBar","_overlay","_injector","_breakpointObserver","_parentSnackBar","_defaultConfig","_snackBarRefAtThisLevel","simpleSnackBarComponent","snackBarContainerComponent","handsetCssClass","parent","_openedSnackBarRef","config","_attach","_config","Object","assign","openFromComponent","overlayRef","userInjector","viewContainerRef","injector","create","useValue","containerPortal","containerRef","attach","instance","content","userConfig","_createOverlay","container","_attachSnackBarContainer","$implicit","_createInjector","contentRef","observe","HandsetPortrait","detachments","state","overlayElement","matches","announce","_animateSnackBar","afterDismissed","clear","enter","afterOpened","_dismissAfter","overlayConfig","direction","positionStrategy","position","global","isRtl","isLeft","isRight","left","right","centerHorizontally","top","bottom","MatSnackBar_Factory","ɵprov","token","__esModule","LoginComponent","router","fb","cd","inputType","visible","icVisibility","icVisibilityOff","form","group","username","password","navigate","toggleVisibility","send","fadeInUpAnimation","fadeInUp400ms"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAaA,UAAMA,MAAM,GAAG,CACb;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADa,CAAf;;UAwBaC,W;;;;;yBAAAA,W;AAAW,O;;;cAAXA;;;kBAfF,CACP,6DAAaC,QAAb,CAAsBJ,MAAtB,CADO,EAEP,4DAFO,EAGP,qEAHO,EAIP,kEAJO,EAKP,sEALO,EAMP,oEANO,EAOP,6EAPO,EAQP,mEARO,EASP,0EATO,EAUP,yEAVO,EAWP,6EAXO,C;;;;6HAeEG,W,EAAW;AAAA,yBAhBP,+DAgBO;AAhBO,kFAG3B,4DAH2B,EAI3B,qEAJ2B,EAK3B,kEAL2B,EAM3B,sEAN2B,EAO3B,oEAP2B,EAQ3B,6EAR2B,EAS3B,mEAT2B,EAU3B,0EAV2B,EAW3B,yEAX2B,EAY3B,6EAZ2B;AAgBP,S;AAJH,O;;;;;;;;;;;;;;;;;AClCrB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AAMA,UAAME,GAAG,GAAG,CAAC,OAAD,CAAZ;;AACA,UAAMC,GAAG,GAAG,SAANA,GAAM,GAAY;AAAE,eAAO;AAAEC,uBAAa,EAAE;AAAjB,SAAP;AAAgC,OAA1D;;AACA,UAAMC,GAAG,GAAG,CAAC,GAAD,CAAZ;AACA,UAAMC,4BAA4B,GAAG,IAAI,4DAAJ,CAAmB,8BAAnB,EAAmD;AACpFC,kBAAU,EAAE,MADwE;AAEpFC,eAAO,EAAEC;AAF2E,OAAnD,CAArC;AAIA;;AACA,eAASA,oCAAT,GAAgD;AAC5C,eAAO;AACHC,eAAK,EAAE,QADJ;AAEHC,qBAAW,EAAE;AAFV,SAAP;AAIH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAIC,YAAY,GAAG,CAAnB,C,CACA;;AACA,UAAMC,QAAQ,GAAGJ,oCAAoC,EAArD;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMK,mCAAmC,GAAG;AACxCC,eAAO,EAAE,gEAD+B;AAExCC,mBAAW,EAAE,iEAAW;AAAA,iBAAMC,WAAN;AAAA,SAAX,CAF2B;AAGxCC,aAAK,EAAE;AAHiC,OAA5C;AAKA;;UACMC,iB;;SAEN;;AACA;;;UACMC,e,GACF,yBAAYC,WAAZ,EAAyB;AAAA;;AACrB,aAAKA,WAAL,GAAmBA,WAAnB;AACH,O;;AAEL,UAAMC,qBAAqB,GAAG,6EAAc,0EAAW,kFAAmB,6EAAcF,eAAd,CAAnB,CAAX,CAAd,CAA9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACMH,W;;;;;AACF,6BAAYM,UAAZ,EAAwBC,kBAAxB,EAA4CC,aAA5C,EAA2DC,OAA3D,EAAoEC,QAApE,EAA8EC,cAA9E,EAA8FC,QAA9F,EAAwG;AAAA;;AAAA;;AACpG,oCAAMN,UAAN;AACA,gBAAKC,kBAAL,GAA0BA,kBAA1B;AACA,gBAAKC,aAAL,GAAqBA,aAArB;AACA,gBAAKC,OAAL,GAAeA,OAAf;AACA,gBAAKE,cAAL,GAAsBA,cAAtB;AACA,gBAAKC,QAAL,GAAgBA,QAAhB;AACA;AACR;AACA;AACA;;AACQ,gBAAKC,SAAL,GAAiB,EAAjB;AACA;AACR;AACA;;AACQ,gBAAKC,cAAL,GAAsB,IAAtB;AACA,gBAAKC,SAAL,0BAAiC,EAAEpB,YAAnC;AACA;;AACA,gBAAKqB,EAAL,GAAU,MAAKD,SAAf;AACA;;AACA,gBAAKE,aAAL,GAAqB,OAArB;AACA;;AACA,gBAAKC,IAAL,GAAY,IAAZ;AACA;;AACA,gBAAKC,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACA;;AACA,gBAAKC,mBAAL,GAA2B,IAAI,0DAAJ,EAA3B;AACA;AACR;AACA;AACA;;AACQ,gBAAKC,UAAL,GAAkB,YAAM,CAAG,CAA3B;;AACA,gBAAKC,sBAAL,GAA8B,EAA9B;AACA,gBAAKC,kBAAL,GAA0B;AAAE;AAA5B;;AACA,gBAAKC,6BAAL,GAAqC,YAAM,CAAG,CAA9C;;AACA,gBAAKC,QAAL,GAAgB,KAAhB;AACA,gBAAKC,SAAL,GAAiB,KAAjB;AACA,gBAAKC,cAAL,GAAsB,KAAtB;AACA,gBAAKf,QAAL,GAAgB,MAAKA,QAAL,IAAiBhB,QAAjC;AACA,gBAAKH,KAAL,GAAa,MAAKmC,YAAL,GAAoB,MAAKhB,QAAL,CAAcnB,KAAd,IAAuBG,QAAQ,CAACH,KAAjE;AACA,gBAAKiB,QAAL,GAAgBmB,QAAQ,CAACnB,QAAD,CAAR,IAAsB,CAAtC;AAxCoG;AAyCvG;AACD;;;;;eACA,eAAc;AAAE,6BAAU,KAAKM,EAAL,IAAW,KAAKD,SAA1B;AAA8C;AAC9D;;;;eACA,eAAe;AAAE,mBAAO,KAAKe,SAAZ;AAAwB,W;eACzC,aAAaC,KAAb,EAAoB;AAAE,iBAAKD,SAAL,GAAiB,oFAAsBC,KAAtB,CAAjB;AAAgD;;;iBACtE,2BAAkB;AAAA;;AACd,iBAAKvB,aAAL,CAAmBwB,OAAnB,CAA2B,KAAK5B,WAAhC,EAA6C,IAA7C,EAAmD6B,SAAnD,CAA6D,UAAAC,WAAW,EAAI;AACxE,kBAAI,CAACA,WAAL,EAAkB;AACd;AACA;AACA;AACA;AACA;AACAC,uBAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAM;AACzB,wBAAI,CAAChB,UAAL;;AACA,wBAAI,CAACd,kBAAL,CAAwB+B,YAAxB;AACH,iBAHD;AAIH;AACJ,aAZD;;AAaA,iBAAKC,kBAAL,CAAwB,KAAKZ,cAA7B;AACH,W,CACD;;;;iBACA,8BAAqB,CAAG;;;iBACxB,uBAAc;AACV,iBAAKnB,aAAL,CAAmBgC,cAAnB,CAAkC,KAAKpC,WAAvC;AACH;AACD;AACJ;AACA;;;;eACI,eAAc;AAAE,mBAAO,KAAKqB,QAAZ;AAAuB,W;eACvC,aAAYM,KAAZ,EAAmB;AACf,gBAAIA,KAAK,IAAI,KAAKU,OAAlB,EAA2B;AACvB,mBAAKhB,QAAL,GAAgBM,KAAhB;;AACA,mBAAKxB,kBAAL,CAAwB+B,YAAxB;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;eACI,eAAe;AAAE,mBAAO,KAAKZ,SAAZ;AAAwB,W;eACzC,aAAaK,KAAb,EAAoB;AAChB,gBAAMW,QAAQ,GAAG,oFAAsBX,KAAtB,CAAjB;;AACA,gBAAIW,QAAQ,KAAK,KAAKC,QAAtB,EAAgC;AAC5B,mBAAKjB,SAAL,GAAiBgB,QAAjB;;AACA,mBAAKnC,kBAAL,CAAwB+B,YAAxB;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;eACI,eAAoB;AAAE,mBAAO,KAAKX,cAAZ;AAA6B,W;eACnD,aAAkBI,KAAlB,EAAyB;AACrB,gBAAMa,OAAO,GAAGb,KAAK,IAAI,KAAKJ,cAA9B;AACA,iBAAKA,cAAL,GAAsB,oFAAsBI,KAAtB,CAAtB;;AACA,gBAAIa,OAAJ,EAAa;AACT,kBAAI,KAAKjB,cAAT,EAAyB;AACrB,qBAAKkB,qBAAL,CAA2B;AAAE;AAA7B;AACH,eAFD,MAGK;AACD,qBAAKA,qBAAL,CAA2B,KAAKJ,OAAL,GAAe;AAAE;AAAjB,kBAAiC;AAAE;AAA9D;AACH;;AACD,mBAAKrB,mBAAL,CAAyB0B,IAAzB,CAA8B,KAAKnB,cAAnC;AACH;;AACD,iBAAKY,kBAAL,CAAwB,KAAKZ,cAA7B;AACH;;;iBACD,6BAAoB;AAChB,mBAAO,KAAKoB,aAAL,IAAsB,KAAKJ,QAAlC;AACH;AACD;;;;iBACA,8BAAqB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAKpC,kBAAL,CAAwByC,aAAxB;AACH,W,CACD;;;;iBACA,oBAAWjB,KAAX,EAAkB;AACd,iBAAKU,OAAL,GAAe,CAAC,CAACV,KAAjB;AACH,W,CACD;;;;iBACA,0BAAiBkB,EAAjB,EAAqB;AACjB,iBAAKzB,6BAAL,GAAqCyB,EAArC;AACH,W,CACD;;;;iBACA,2BAAkBA,EAAlB,EAAsB;AAClB,iBAAK5B,UAAL,GAAkB4B,EAAlB;AACH,W,CACD;;;;iBACA,0BAAiBC,UAAjB,EAA6B;AACzB,iBAAKP,QAAL,GAAgBO,UAAhB;AACH;;;iBACD,2BAAkB;AACd,gBAAI,KAAKT,OAAT,EAAkB;AACd,qBAAO,MAAP;AACH;;AACD,mBAAO,KAAKU,aAAL,GAAqB,OAArB,GAA+B,OAAtC;AACH;;;iBACD,+BAAsBC,QAAtB,EAAgC;AAC5B,gBAAIC,QAAQ,GAAG,KAAK9B,kBAApB;AACA,gBAAI+B,OAAO,GAAG,KAAKlD,WAAL,CAAiBmD,aAA/B;;AACA,gBAAIF,QAAQ,KAAKD,QAAjB,EAA2B;AACvB;AACH;;AACD,gBAAI,KAAK9B,sBAAL,CAA4BkC,MAA5B,GAAqC,CAAzC,EAA4C;AACxCF,qBAAO,CAACG,SAAR,CAAkBC,MAAlB,CAAyB,KAAKpC,sBAA9B;AACH;;AACD,iBAAKA,sBAAL,GAA8B,KAAKqC,yCAAL,CAA+CN,QAA/C,EAAyDD,QAAzD,CAA9B;AACA,iBAAK7B,kBAAL,GAA0B6B,QAA1B;;AACA,gBAAI,KAAK9B,sBAAL,CAA4BkC,MAA5B,GAAqC,CAAzC,EAA4C;AACxCF,qBAAO,CAACG,SAAR,CAAkBG,GAAlB,CAAsB,KAAKtC,sBAA3B,EADwC,CAExC;;AACA,kBAAMuC,cAAc,GAAG,KAAKvC,sBAA5B;;AACA,mBAAKb,OAAL,CAAaqD,iBAAb,CAA+B,YAAM;AACjCC,0BAAU,CAAC,YAAM;AACbT,yBAAO,CAACG,SAAR,CAAkBC,MAAlB,CAAyBG,cAAzB;AACH,iBAFS,EAEP,IAFO,CAAV;AAGH,eAJD;AAKH;AACJ;;;iBACD,4BAAmB;AACf,gBAAMG,KAAK,GAAG,IAAI9D,iBAAJ,EAAd;AACA8D,iBAAK,CAACC,MAAN,GAAe,IAAf;AACAD,iBAAK,CAACvB,OAAN,GAAgB,KAAKA,OAArB;;AACA,iBAAKjB,6BAAL,CAAmC,KAAKiB,OAAxC;;AACA,iBAAKtB,MAAL,CAAY2B,IAAZ,CAAiBkB,KAAjB;AACH;AACD;;;;iBACA,kBAAS;AACL,iBAAKvB,OAAL,GAAe,CAAC,KAAKA,OAArB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,uBAAcuB,KAAd,EAAqB;AAAA;;AACjB,gBAAIE,EAAJ;;AACA,gBAAMxE,WAAW,GAAG,CAACwE,EAAE,GAAG,KAAKtD,QAAX,MAAyB,IAAzB,IAAiCsD,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACxE,WAAjF,CAFiB,CAGjB;AACA;AACA;AACA;AACA;AACA;AACA;;AACAsE,iBAAK,CAACG,eAAN,GAViB,CAWjB;;AACA,gBAAI,CAAC,KAAKxB,QAAN,IAAkBjD,WAAW,KAAK,MAAtC,EAA8C;AAC1C;AACA,kBAAI,KAAKyD,aAAL,IAAsBzD,WAAW,KAAK,OAA1C,EAAmD;AAC/CyC,uBAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAM;AACzB,wBAAI,CAACV,cAAL,GAAsB,KAAtB;;AACA,wBAAI,CAACP,mBAAL,CAAyB0B,IAAzB,CAA8B,MAAI,CAACnB,cAAnC;AACH,iBAHD;AAIH;;AACD,mBAAKyC,MAAL;;AACA,mBAAKvB,qBAAL,CAA2B,KAAKpB,QAAL,GAAgB;AAAE;AAAlB,gBAAkC;AAAE;AAA/D,gBAT0C,CAU1C;AACA;AACA;;;AACA,mBAAK4C,gBAAL;AACH,aAdD,MAeK,IAAI,CAAC,KAAK1B,QAAN,IAAkBjD,WAAW,KAAK,MAAtC,EAA8C;AAC/C;AACA;AACA,mBAAK4E,aAAL,CAAmBf,aAAnB,CAAiCd,OAAjC,GAA2C,KAAKA,OAAhD;AACA,mBAAK6B,aAAL,CAAmBf,aAAnB,CAAiCJ,aAAjC,GAAiD,KAAKA,aAAtD;AACH;AACJ;AACD;;;;iBACA,eAAMoB,MAAN,EAAcC,OAAd,EAAuB;AACnB,gBAAID,MAAJ,EAAY;AACR,mBAAK/D,aAAL,CAAmBiE,QAAnB,CAA4B,KAAKH,aAAjC,EAAgDC,MAAhD,EAAwDC,OAAxD;AACH,aAFD,MAGK;AACD,mBAAKF,aAAL,CAAmBf,aAAnB,CAAiCmB,KAAjC,CAAuCF,OAAvC;AACH;AACJ;;;iBACD,6BAAoBR,KAApB,EAA2B;AACvB;AACA;AACA;AACAA,iBAAK,CAACG,eAAN;AACH;;;iBACD,mDAA0Cd,QAA1C,EAAoDD,QAApD,EAA8D;AAC1D;AACA,gBAAI,KAAKzC,cAAL,KAAwB,gBAA5B,EAA8C;AAC1C,qBAAO,EAAP;AACH;;AACD,gBAAIgE,UAAU,GAAG,EAAjB;;AACA,oBAAQtB,QAAR;AACI,mBAAK;AAAE;AAAP;AACI;AACA;AACA,oBAAID,QAAQ,KAAK;AAAE;AAAnB,kBAAkC;AAC9BuB,4BAAU,GAAG,mBAAb;AACH,iBAFD,MAGK,IAAIvB,QAAQ,IAAI;AAAE;AAAlB,kBAAuC;AACxCuB,4BAAU,GAAG,yBAAb;AACH,iBAFI,MAGA;AACD,yBAAO,EAAP;AACH;;AACD;;AACJ,mBAAK;AAAE;AAAP;AACIA,0BAAU,GAAGvB,QAAQ,KAAK;AAAE;AAAf,kBACT,mBADS,GACa,yBAD1B;AAEA;;AACJ,mBAAK;AAAE;AAAP;AACIuB,0BAAU,GAAGvB,QAAQ,KAAK;AAAE;AAAf,kBACT,mBADS,GACa,uBAD1B;AAEA;;AACJ,mBAAK;AAAE;AAAP;AACIuB,0BAAU,GAAGvB,QAAQ,KAAK;AAAE;AAAf,kBACT,uBADS,GACiB,yBAD9B;AAEA;AAzBR;;AA2BA,+CAA4BuB,UAA5B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,4BAAmB5C,KAAnB,EAA0B;AACtB,gBAAM6C,cAAc,GAAG,KAAKN,aAA5B;;AACA,gBAAIM,cAAJ,EAAoB;AAChBA,4BAAc,CAACrB,aAAf,CAA6BJ,aAA7B,GAA6CpB,KAA7C;AACH;AACJ;;;;QA3RqB1B,qB;;AA6R1BL,iBAAW,CAAC6E,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,eAAO,KAAKA,CAAC,IAAI/E,WAAV,EAAuB,gEAAyB,wDAAzB,CAAvB,EAAoE,gEAAyB,+DAAzB,CAApE,EAAwH,gEAAyB,8DAAzB,CAAxH,EAAuK,gEAAyB,oDAAzB,CAAvK,EAAgN,gEAAyB,UAAzB,CAAhN,EAAsP,gEAAyB,0FAAzB,EAAgD,CAAhD,CAAtP,EAA0S,gEAAyBX,4BAAzB,EAAuD,CAAvD,CAA1S,CAAP;AAA8W,OAAna;;AACAW,iBAAW,CAACgF,IAAZ,GAAmB,gEAAyB;AAAEC,YAAI,EAAEjF,WAAR;AAAqBkF,iBAAS,EAAE,CAAC,CAAC,cAAD,CAAD,CAAhC;AAAoDC,iBAAS,EAAE,SAASC,iBAAT,CAA2BC,EAA3B,EAA+BC,GAA/B,EAAoC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACrJ,sEAAmBpG,GAAnB,EAAwB,CAAxB;;AACA,sEAAmB,gEAAnB,EAA8B,CAA9B;AACH;;AAAC,cAAIoG,EAAE,GAAG,CAAT,EAAY;AACV,gBAAIE,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqDD,GAAG,CAAChB,aAAJ,GAAoBiB,EAAE,CAACC,KAA5E;AACA,yEAAsBD,EAAE,GAAG,2DAA3B,MAAqDD,GAAG,CAACG,MAAJ,GAAaF,EAAE,CAACC,KAArE;AACH;AAAE,SAPqC;AAOnCE,iBAAS,EAAE,CAAC,CAAD,EAAI,cAAJ,CAPwB;AAOHC,gBAAQ,EAAE,EAPP;AAOWC,oBAAY,EAAE,SAASC,wBAAT,CAAkCR,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACtH,yEAAsB,IAAtB,EAA4BC,GAAG,CAACtE,EAAhC;;AACA,sEAAmB,UAAnB,EAA+B,IAA/B;;AACA,sEAAmB,4BAAnB,EAAiDsE,GAAG,CAACnC,aAArD,EAAoE,sBAApE,EAA4FmC,GAAG,CAAC7C,OAAhG,EAAyG,uBAAzG,EAAkI6C,GAAG,CAAC3C,QAAtI,EAAgJ,2BAAhJ,EAA6K2C,GAAG,CAACrE,aAAJ,IAAqB,QAAlM,EAA4M,yBAA5M,EAAuOqE,GAAG,CAAC3E,cAAJ,KAAuB,gBAA9P;AACH;AAAE,SAXqC;AAWnCmF,cAAM,EAAE;AAAE/C,uBAAa,EAAE,eAAjB;AAAkCtD,eAAK,EAAE,OAAzC;AAAkDiB,kBAAQ,EAAE,UAA5D;AAAwEG,mBAAS,EAAE,CAAC,YAAD,EAAe,WAAf,CAAnF;AAAgHC,wBAAc,EAAE,CAAC,iBAAD,EAAoB,gBAApB,CAAhI;AAAuKE,YAAE,EAAE,IAA3K;AAAiLC,uBAAa,EAAE,eAAhM;AAAiNC,cAAI,EAAE,MAAvN;AAA+N6E,kBAAQ,EAAE,UAAzO;AAAqPtD,iBAAO,EAAE,SAA9P;AAAyQE,kBAAQ,EAAE,UAAnR;AAA+RQ,uBAAa,EAAE,eAA9S;AAA+T6C,yBAAe,EAAE,CAAC,kBAAD,EAAqB,iBAArB,CAAhV;AAAyXjE,eAAK,EAAE;AAAhY,SAX2B;AAWgXkE,eAAO,EAAE;AAAE9E,gBAAM,EAAE,QAAV;AAAoBC,6BAAmB,EAAE;AAAzC,SAXzX;AAW2b8E,gBAAQ,EAAE,CAAC,aAAD,CAXrc;AAWsdC,gBAAQ,EAAE,CAAC,iEAA0B,CAACtG,mCAAD,CAA1B,CAAD,EAAmE,wEAAnE,CAXhe;AAWukBuG,0BAAkB,EAAEhH,GAX3lB;AAWgmBiH,aAAK,EAAE,EAXvmB;AAW2mBC,YAAI,EAAE,EAXjnB;AAWqnBC,cAAM,EAAE,CAAC,CAAC,CAAD,EAAI,qBAAJ,CAAD,EAA6B,CAAC,OAAD,EAAU,EAAV,CAA7B,EAA4C,CAAC,CAAD,EAAI,8BAAJ,CAA5C,EAAiF,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,oBAAxB,EAA8C,qBAA9C,EAAqE,CAArE,EAAwE,IAAxE,EAA8E,UAA9E,EAA0F,SAA1F,EAAqG,UAArG,EAAiH,UAAjH,EAA6H,QAA7H,EAAuI,OAAvI,CAAjF,EAAkO,CAAC,OAAD,EAAU,EAAV,CAAlO,EAAiP,CAAC,WAAD,EAAc,EAAd,EAAkB,CAAlB,EAAqB,qBAArB,EAA4C,qBAA5C,EAAmE,CAAnE,EAAsE,kBAAtE,EAA0F,mBAA1F,EAA+G,iBAA/G,EAAkI,mBAAlI,EAAuJ,oBAAvJ,CAAjP,EAA+Z,CAAC,CAAD,EAAI,oBAAJ,EAA0B,gCAA1B,CAA/Z,EAA4d,CAAC,CAAD,EAAI,oBAAJ,CAA5d,EAAuf,CAAC,CAAD,EAAI,yBAAJ,CAAvf,EAAuhB,CAAC,SAAD,EAAY,KAAZ,EAAmB,WAAnB,EAAgC,OAAhC,EAAyC,SAAzC,EAAoD,WAApD,EAAiE,CAAjE,EAAoE,KAApE,EAA2E,OAA3E,EAAoF,UAApF,EAAgG,CAAhG,EAAmG,wBAAnG,CAAvhB,EAAqpB,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,EAA2B,OAA3B,EAAoC,GAApC,EAAyC,2BAAzC,EAAsE,CAAtE,EAAyE,6BAAzE,CAArpB,EAA8vB,CAAC,CAAD,EAAI,wBAAJ,CAA9vB,EAA6xB,CAAC,CAAD,EAAI,oBAAJ,EAA0B,CAA1B,EAA6B,mBAA7B,CAA7xB,EAAg1B,CAAC,eAAD,EAAkB,EAAlB,CAAh1B,EAAu2B,CAAC,CAAD,EAAI,SAAJ,EAAe,MAAf,CAAv2B,CAX7nB;AAW6/CC,gBAAQ,EAAE,SAASC,oBAAT,CAA8BpB,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAChmD;;AACA,yEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC,EAAqC,CAArC;;AACA,yEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,yEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC,EAAqC,CAArC;;AACA,qEAAkB,QAAlB,EAA4B,SAASqB,4CAAT,CAAsDC,MAAtD,EAA8D;AAAE,qBAAOrB,GAAG,CAACsB,mBAAJ,CAAwBD,MAAxB,CAAP;AAAyC,aAArI,EAAuI,OAAvI,EAAgJ,SAASE,2CAAT,CAAqDF,MAArD,EAA6D;AAAE,qBAAOrB,GAAG,CAACwB,aAAJ,CAAkBH,MAAlB,CAAP;AAAmC,aAAlP;;AACA;;AACA,yEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,oEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;;AACA;;AACA,oEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;;AACA,yEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,oEAAiB,EAAjB,EAAqB,MAArB,EAA6B,EAA7B;;AACA;;AACA;;AACA,oEAAiB,EAAjB,EAAqB,MAArB,EAA6B,EAA7B;;AACA;;AACA;;AACA,yEAAsB,EAAtB,EAA0B,MAA1B,EAAkC,EAAlC,EAAsC,EAAtC;;AACA,qEAAkB,mBAAlB,EAAuC,SAASI,uDAAT,GAAmE;AAAE,qBAAOzB,GAAG,CAAC0B,kBAAJ,EAAP;AAAkC,aAA9I;;AACA,yEAAsB,EAAtB,EAA0B,MAA1B,EAAkC,EAAlC;;AACA,iEAAc,EAAd,EAAkB,MAAlB;;AACA;;AACA,uEAAoB,EAApB;;AACA;;AACA;AACH;;AAAC,cAAI3B,EAAE,GAAG,CAAT,EAAY;AACV,gBAAM4B,GAAG,GAAG,0DAAmB,CAAnB,CAAZ;;AACA,gBAAMC,GAAG,GAAG,0DAAmB,EAAnB,CAAZ;;AACA,sEAAmB,KAAnB,EAA0B5B,GAAG,CAAC6B,OAA9B;;AACA,oEAAiB,CAAjB;;AACA,sEAAmB,6CAAnB,EAAkE,CAACD,GAAG,CAACE,WAAL,IAAoB,CAACF,GAAG,CAACE,WAAJ,CAAgBC,IAAhB,EAAvF;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,IAAlB,EAAwB/B,GAAG,CAAC6B,OAA5B,EAAqC,UAArC,EAAiD7B,GAAG,CAACS,QAArD,EAA+D,SAA/D,EAA0ET,GAAG,CAAC7C,OAA9E,EAAuF,UAAvF,EAAmG6C,GAAG,CAAC3C,QAAvG,EAAiH,UAAjH,EAA6H2C,GAAG,CAAC5E,QAAjI;;AACA,sEAAmB,OAAnB,EAA4B4E,GAAG,CAACvD,KAAhC,EAAuC,MAAvC,EAA+CuD,GAAG,CAACpE,IAAnD,EAAyD,YAAzD,EAAuEoE,GAAG,CAACzE,SAAJ,IAAiB,IAAxF,EAA8F,iBAA9F,EAAiHyE,GAAG,CAACxE,cAArH,EAAqI,cAArI,EAAqJwE,GAAG,CAACgC,eAAJ,EAArJ,EAA4K,kBAA5K,EAAgMhC,GAAG,CAACU,eAApM;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,kBAAlB,EAAsCiB,GAAtC,EAA2C,mBAA3C,EAAgE3B,GAAG,CAACiC,iBAAJ,EAAhE,EAAyF,iBAAzF,EAA4G,EAA5G,EAAgH,mBAAhH,EAAqI,IAArI,EAA2I,oBAA3I,EAAiK,8DAAuB,EAAvB,EAA2BrI,GAA3B,CAAjK;AACH;AAAE,SAlDqC;AAkDnCsI,kBAAU,EAAE,CAAC,gEAAD,EAAmB,wEAAnB,CAlDuB;AAkDuBC,cAAM,EAAE,CAAC,u1NAAD,CAlD/B;AAkD03NC,qBAAa,EAAE,CAlDz4N;AAkD44NC,uBAAe,EAAE;AAlD75N,OAAzB,CAAnB;;AAmDA3H,iBAAW,CAAC4H,cAAZ,GAA6B;AAAA,eAAM,CAC/B;AAAE3C,cAAI,EAAE;AAAR,SAD+B,EAE/B;AAAEA,cAAI,EAAE;AAAR,SAF+B,EAG/B;AAAEA,cAAI,EAAE;AAAR,SAH+B,EAI/B;AAAEA,cAAI,EAAE;AAAR,SAJ+B,EAK/B;AAAEA,cAAI,EAAE4C,MAAR;AAAgBC,oBAAU,EAAE,CAAC;AAAE7C,gBAAI,EAAE,uDAAR;AAAmB8C,gBAAI,EAAE,CAAC,UAAD;AAAzB,WAAD;AAA5B,SAL+B,EAM/B;AAAE9C,cAAI,EAAE4C,MAAR;AAAgBC,oBAAU,EAAE,CAAC;AAAE7C,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgB8C,gBAAI,EAAE,CAAC,0FAAD;AAAtB,WAArB;AAA5B,SAN+B,EAO/B;AAAE9C,cAAI,EAAE+C,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAE7C,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgB8C,gBAAI,EAAE,CAAC1I,4BAAD;AAAtB,WAArB;AAA/B,SAP+B,CAAN;AAAA,OAA7B;;AASAW,iBAAW,CAACiI,cAAZ,GAA6B;AACzBpH,iBAAS,EAAE,CAAC;AAAEoE,cAAI,EAAE,mDAAR;AAAe8C,cAAI,EAAE,CAAC,YAAD;AAArB,SAAD,CADc;AAEzBjH,sBAAc,EAAE,CAAC;AAAEmE,cAAI,EAAE,mDAAR;AAAe8C,cAAI,EAAE,CAAC,iBAAD;AAArB,SAAD,CAFS;AAGzB/B,uBAAe,EAAE,CAAC;AAAEf,cAAI,EAAE,mDAAR;AAAe8C,cAAI,EAAE,CAAC,kBAAD;AAArB,SAAD,CAHQ;AAIzB/G,UAAE,EAAE,CAAC;AAAEiE,cAAI,EAAE;AAAR,SAAD,CAJqB;AAKzBc,gBAAQ,EAAE,CAAC;AAAEd,cAAI,EAAE;AAAR,SAAD,CALe;AAMzBhE,qBAAa,EAAE,CAAC;AAAEgE,cAAI,EAAE;AAAR,SAAD,CANU;AAOzB/D,YAAI,EAAE,CAAC;AAAE+D,cAAI,EAAE;AAAR,SAAD,CAPmB;AAQzB9D,cAAM,EAAE,CAAC;AAAE8D,cAAI,EAAE;AAAR,SAAD,CARiB;AASzB7D,2BAAmB,EAAE,CAAC;AAAE6D,cAAI,EAAE;AAAR,SAAD,CATI;AAUzBlD,aAAK,EAAE,CAAC;AAAEkD,cAAI,EAAE;AAAR,SAAD,CAVkB;AAWzBX,qBAAa,EAAE,CAAC;AAAEW,cAAI,EAAE,uDAAR;AAAmB8C,cAAI,EAAE,CAAC,OAAD;AAAzB,SAAD,CAXU;AAYzBtC,cAAM,EAAE,CAAC;AAAER,cAAI,EAAE,uDAAR;AAAmB8C,cAAI,EAAE,CAAC,gEAAD;AAAzB,SAAD,CAZiB;AAazBtF,eAAO,EAAE,CAAC;AAAEwC,cAAI,EAAE;AAAR,SAAD,CAbgB;AAczBtC,gBAAQ,EAAE,CAAC;AAAEsC,cAAI,EAAE;AAAR,SAAD,CAde;AAezB9B,qBAAa,EAAE,CAAC;AAAE8B,cAAI,EAAE;AAAR,SAAD;AAfU,OAA7B;;AAiBA,OAAC,YAAY;AAAE,SAAC,OAAOiD,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBlI,WAAzB,EAAsC,CAAC;AACjGiF,cAAI,EAAE,uDAD2F;AAEjG8C,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE,cADX;AAEC3B,oBAAQ,EAAE,omEAFX;AAGCN,oBAAQ,EAAE,aAHX;AAICkC,gBAAI,EAAE;AACF,uBAAS,cADP;AAEF,sBAAQ,IAFN;AAGF,iCAAmB,MAHjB;AAIF,oDAAsC,eAJpC;AAKF,8CAAgC,SAL9B;AAMF,+CAAiC,UAN/B;AAOF,mDAAqC,2BAPnC;AAQF;AARE,aAJP;AAcCC,qBAAS,EAAE,CAACxI,mCAAD,CAdZ;AAeCiG,kBAAM,EAAE,CAAC,eAAD,EAAkB,OAAlB,EAA2B,UAA3B,CAfT;AAgBC4B,yBAAa,EAAE,gEAAkBY,IAhBlC;AAiBCX,2BAAe,EAAE,sEAAwBY,MAjB1C;AAkBCd,kBAAM,EAAE,CAAC,u1NAAD;AAlBT,WAAD;AAF2F,SAAD,CAAtC,EAsB1D,YAAY;AAAE,iBAAO,CAAC;AAAExC,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE;AAAR,WAA9B,EAAkE;AAAEA,gBAAI,EAAE;AAAR,WAAlE,EAAiG;AAAEA,gBAAI,EAAE;AAAR,WAAjG,EAA0H;AAAEA,gBAAI,EAAE4C,MAAR;AAAgBC,sBAAU,EAAE,CAAC;AACpK7C,kBAAI,EAAE,uDAD8J;AAEpK8C,kBAAI,EAAE,CAAC,UAAD;AAF8J,aAAD;AAA5B,WAA1H,EAGX;AAAE9C,gBAAI,EAAE4C,MAAR;AAAgBC,sBAAU,EAAE,CAAC;AAC/B7C,kBAAI,EAAE;AADyB,aAAD,EAE/B;AACCA,kBAAI,EAAE,oDADP;AAEC8C,kBAAI,EAAE,CAAC,0FAAD;AAFP,aAF+B;AAA5B,WAHW,EAQX;AAAE9C,gBAAI,EAAE+C,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AAClC7C,kBAAI,EAAE;AAD4B,aAAD,EAElC;AACCA,kBAAI,EAAE,oDADP;AAEC8C,kBAAI,EAAE,CAAC1I,4BAAD;AAFP,aAFkC;AAA/B,WARW,CAAP;AAaF,SAnC8C,EAmC5C;AAAEwB,mBAAS,EAAE,CAAC;AACxBoE,gBAAI,EAAE,mDADkB;AAExB8C,gBAAI,EAAE,CAAC,YAAD;AAFkB,WAAD,CAAb;AAGVjH,wBAAc,EAAE,CAAC;AACjBmE,gBAAI,EAAE,mDADW;AAEjB8C,gBAAI,EAAE,CAAC,iBAAD;AAFW,WAAD,CAHN;AAMV/G,YAAE,EAAE,CAAC;AACLiE,gBAAI,EAAE;AADD,WAAD,CANM;AAQVhE,uBAAa,EAAE,CAAC;AAChBgE,gBAAI,EAAE;AADU,WAAD,CARL;AAUV/D,cAAI,EAAE,CAAC;AACP+D,gBAAI,EAAE;AADC,WAAD,CAVI;AAYV9D,gBAAM,EAAE,CAAC;AACT8D,gBAAI,EAAE;AADG,WAAD,CAZE;AAcV7D,6BAAmB,EAAE,CAAC;AACtB6D,gBAAI,EAAE;AADgB,WAAD,CAdX;AAgBVc,kBAAQ,EAAE,CAAC;AACXd,gBAAI,EAAE;AADK,WAAD,CAhBA;AAkBVxC,iBAAO,EAAE,CAAC;AACVwC,gBAAI,EAAE;AADI,WAAD,CAlBC;AAoBVtC,kBAAQ,EAAE,CAAC;AACXsC,gBAAI,EAAE;AADK,WAAD,CApBA;AAsBV9B,uBAAa,EAAE,CAAC;AAChB8B,gBAAI,EAAE;AADU,WAAD,CAtBL;AAwBVe,yBAAe,EAAE,CAAC;AAClBf,gBAAI,EAAE,mDADY;AAElB8C,gBAAI,EAAE,CAAC,kBAAD;AAFY,WAAD,CAxBP;AA2BVhG,eAAK,EAAE,CAAC;AACRkD,gBAAI,EAAE;AADE,WAAD,CA3BG;AA6BVX,uBAAa,EAAE,CAAC;AAChBW,gBAAI,EAAE,uDADU;AAEhB8C,gBAAI,EAAE,CAAC,OAAD;AAFU,WAAD,CA7BL;AAgCVtC,gBAAM,EAAE,CAAC;AACTR,gBAAI,EAAE,uDADG;AAET8C,gBAAI,EAAE,CAAC,gEAAD;AAFG,WAAD;AAhCE,SAnC4C,CAAnD;AAsEC,OAtEhB;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAMS,+BAA+B,GAAG;AACpC1I,eAAO,EAAE,4DAD2B;AAEpCC,mBAAW,EAAE,iEAAW;AAAA,iBAAM0I,4BAAN;AAAA,SAAX,CAFuB;AAGpCxI,aAAK,EAAE;AAH6B,OAAxC;AAKA;AACA;AACA;AACA;AACA;;UACMwI,4B;;;;;;;;;;;;QAAqC,wE;;AAE3CA,kCAA4B,CAAC5D,IAA7B,GAAoC,SAAS6D,oCAAT,CAA8C3D,CAA9C,EAAiD;AAAE,eAAO4D,yCAAyC,CAAC5D,CAAC,IAAI0D,4BAAN,CAAhD;AAAsF,OAA7K;;AACAA,kCAA4B,CAACG,IAA7B,GAAoC,gEAAyB;AAAE3D,YAAI,EAAEwD,4BAAR;AAAsCvD,iBAAS,EAAE,CAAC,CAAC,cAAD,EAAiB,UAAjB,EAA6B,EAA7B,EAAiC,iBAAjC,EAAoD,EAApD,CAAD,EAA0D,CAAC,cAAD,EAAiB,UAAjB,EAA6B,EAA7B,EAAiC,aAAjC,EAAgD,EAAhD,CAA1D,EAA+G,CAAC,cAAD,EAAiB,UAAjB,EAA6B,EAA7B,EAAiC,SAAjC,EAA4C,EAA5C,CAA/G,CAAjD;AAAkNiB,gBAAQ,EAAE,CAAC,iEAA0B,CAACqC,+BAAD,CAA1B,CAAD,EAA+D,wEAA/D;AAA5N,OAAzB,CAApC;;AACA,UAAMG,yCAAyC,GAAG,aAAc,oEAA6BF,4BAA7B,CAAhE;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOP,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBO,4BAAzB,EAAuD,CAAC;AAClHxD,cAAI,EAAE,uDAD4G;AAElH8C,cAAI,EAAE,CAAC;AACCI,oBAAQ,+HADT;AAGCE,qBAAS,EAAE,CAACG,+BAAD;AAHZ,WAAD;AAF4G,SAAD,CAAvD,EAO1D,IAP0D,EAOpD,IAPoD,CAAnD;AAOO,OAPtB;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;UACMK,mC;;;;AAENA,yCAAmC,CAAChE,IAApC,GAA2C,SAASiE,2CAAT,CAAqD/D,CAArD,EAAwD;AAAE,eAAO,KAAKA,CAAC,IAAI8D,mCAAV,GAAP;AAA0D,OAA/J;;AACAA,yCAAmC,CAACE,IAApC,GAA2C,+DAAwB;AAAE9D,YAAI,EAAE4D;AAAR,OAAxB,CAA3C;AACAA,yCAAmC,CAACG,IAApC,GAA2C,+DAAwB,EAAxB,CAA3C;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BJ,mCAA1B,EAA+D;AAAEK,sBAAY,EAAE,CAACT,4BAAD,CAAhB;AAAgDU,iBAAO,EAAE,CAACV,4BAAD;AAAzD,SAA/D,CAAnD;AAA+M,OAA9N;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOP,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBW,mCAAzB,EAA8D,CAAC;AACzH5D,cAAI,EAAE,sDADmH;AAEzH8C,cAAI,EAAE,CAAC;AACCoB,mBAAO,EAAE,CAACV,4BAAD,CADV;AAECS,wBAAY,EAAE,CAACT,4BAAD;AAFf,WAAD;AAFmH,SAAD,CAA9D,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,OANtB;;UAOMW,iB;;;;AAENA,uBAAiB,CAACvE,IAAlB,GAAyB,SAASwE,yBAAT,CAAmCtE,CAAnC,EAAsC;AAAE,eAAO,KAAKA,CAAC,IAAIqE,iBAAV,GAAP;AAAwC,OAAzG;;AACAA,uBAAiB,CAACL,IAAlB,GAAyB,+DAAwB;AAAE9D,YAAI,EAAEmE;AAAR,OAAxB,CAAzB;AACAA,uBAAiB,CAACJ,IAAlB,GAAyB,+DAAwB;AAAEM,eAAO,EAAE,CAAC,CACjD,sEADiD,EAChC,sEADgC,EACf,sEADe,EAEjDT,mCAFiD,CAAD,EAGjD,sEAHiD,EAGhCA,mCAHgC;AAAX,OAAxB,CAAzB;;AAIA,OAAC,YAAY;AAAE,SAAC,OAAOI,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BG,iBAA1B,EAA6C;AAAEF,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAAClJ,WAAD,CAAP;AAAuB,WAArD;AAAuDsJ,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,sEAAD,EAAkB,sEAAlB,EAAmC,sEAAnC,EAAoDT,mCAApD,CAAP;AAAkG,WAAhL;AAAkLM,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAACnJ,WAAD,EAAc,sEAAd,EAA+B6I,mCAA/B,CAAP;AAA6E;AAAtR,SAA7C,CAAnD;AAA4X,OAA3Y;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOX,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBkB,iBAAzB,EAA4C,CAAC;AACvGnE,cAAI,EAAE,sDADiG;AAEvG8C,cAAI,EAAE,CAAC;AACCuB,mBAAO,EAAE,CACL,sEADK,EACY,sEADZ,EAC6B,sEAD7B,EAELT,mCAFK,CADV;AAKCM,mBAAO,EAAE,CAACnJ,WAAD,EAAc,sEAAd,EAA+B6I,mCAA/B,CALV;AAMCK,wBAAY,EAAE,CAAClJ,WAAD;AANf,WAAD;AAFiG,SAAD,CAA5C,EAU1D,IAV0D,EAUpD,IAVoD,CAAnD;AAUO,OAVtB;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;ACtlBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AAUA,eAASuJ,6BAAT,CAAuClE,EAAvC,EAA2CC,GAA3C,EAAgD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC1D,cAAM6B,GAAG,GAAG,gEAAZ;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,QAAzB,EAAmC,CAAnC;;AACA,mEAAkB,OAAlB,EAA2B,SAASsC,qDAAT,GAAiE;AAAE,wEAAqBtC,GAArB;;AAA2B,gBAAMuC,MAAM,GAAG,6DAAf;;AAAuC,mBAAOA,MAAM,CAACC,MAAP,EAAP;AAAyB,WAAzL;;AACA,+DAAc,CAAd;;AACA;;AACA;AACH;;AAAC,YAAIrE,EAAE,GAAG,CAAT,EAAY;AACV,cAAMsE,MAAM,GAAG,6DAAf;;AACA,kEAAiB,CAAjB;;AACA,0EAAyBA,MAAM,CAACC,IAAP,CAAYF,MAArC;AACH;AAAE;;AACH,eAASG,2CAAT,CAAqDxE,EAArD,EAAyDC,GAAzD,EAA8D,CAAG;;AACjE,UAAMwE,kBAAkB,GAAG,IAAI,4DAAJ,CAAmB,iBAAnB,CAA3B;AACA;AACA;AACA;;UACMC,iB,GACF,6BAAc;AAAA;;AACV;AACA,aAAKC,UAAL,GAAkB,WAAlB;AACA;AACR;AACA;AACA;;AACQ,aAAKC,mBAAL,GAA2B,EAA3B;AACA;;AACA,aAAKC,QAAL,GAAgB,CAAhB;AACA;;AACA,aAAKN,IAAL,GAAY,IAAZ;AACA;;AACA,aAAKO,kBAAL,GAA0B,QAA1B;AACA;;AACA,aAAKC,gBAAL,GAAwB,QAAxB;AACH,O;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,UAAMC,WAAW,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,CAAtC;AACA;AACA;AACA;;UACMC,c;AACF,gCAAYC,iBAAZ,EAA+BC,WAA/B,EAA4C;AAAA;;AAAA;;AACxC,eAAKA,WAAL,GAAmBA,WAAnB;AACA;;AACA,eAAKC,eAAL,GAAuB,IAAI,4CAAJ,EAAvB;AACA;;AACA,eAAKC,YAAL,GAAoB,IAAI,4CAAJ,EAApB;AACA;;AACA,eAAKC,SAAL,GAAiB,IAAI,4CAAJ,EAAjB;AACA;;AACA,eAAKC,kBAAL,GAA0B,KAA1B;AACA,eAAKL,iBAAL,GAAyBA,iBAAzB,CAVwC,CAWxC;;AACA,eAAKM,QAAL,GAAgB9I,SAAhB,CAA0B;AAAA,mBAAM,MAAI,CAAC+I,OAAL,EAAN;AAAA,WAA1B;;AACAP,2BAAiB,CAACQ,OAAlB,CAA0BhJ,SAA1B,CAAoC;AAAA,mBAAM,MAAI,CAACiJ,cAAL,EAAN;AAAA,WAApC;AACH;AACD;;;;;iBACA,mBAAU;AACN,gBAAI,CAAC,KAAKP,eAAL,CAAqBQ,MAA1B,EAAkC;AAC9B,mBAAKV,iBAAL,CAAuBW,IAAvB;AACH;;AACDC,wBAAY,CAAC,KAAKC,kBAAN,CAAZ;AACH;AACD;;;;iBACA,6BAAoB;AAChB,gBAAI,CAAC,KAAKT,SAAL,CAAeM,MAApB,EAA4B;AACxB,mBAAKL,kBAAL,GAA0B,IAA1B;;AACA,mBAAKD,SAAL,CAAeU,IAAf;;AACA,mBAAKV,SAAL,CAAeW,QAAf;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,2BAAkB;AACd,iBAAKC,iBAAL;AACH;AACD;;;;iBACA,uBAAcvB,QAAd,EAAwB;AAAA;;AACpB;AACA;AACA,iBAAKoB,kBAAL,GAA0BvH,UAAU,CAAC;AAAA,qBAAM,MAAI,CAACiH,OAAL,EAAN;AAAA,aAAD,EAAuBV,IAAI,CAACoB,GAAL,CAASxB,QAAT,EAAmBG,WAAnB,CAAvB,CAApC;AACH;AACD;;;;iBACA,iBAAQ;AACJ,gBAAI,CAAC,KAAKO,YAAL,CAAkBO,MAAvB,EAA+B;AAC3B,mBAAKP,YAAL,CAAkBW,IAAlB;;AACA,mBAAKX,YAAL,CAAkBY,QAAlB;AACH;AACJ;AACD;;;;iBACA,0BAAiB;AACb,iBAAKd,WAAL,CAAiBiB,OAAjB;;AACA,gBAAI,CAAC,KAAKd,SAAL,CAAeM,MAApB,EAA4B;AACxB,mBAAKN,SAAL,CAAeW,QAAf;AACH;;AACD,iBAAKb,eAAL,CAAqBY,IAArB,CAA0B;AAAEK,+BAAiB,EAAE,KAAKd;AAA1B,aAA1B;;AACA,iBAAKH,eAAL,CAAqBa,QAArB;;AACA,iBAAKV,kBAAL,GAA0B,KAA1B;AACH;AACD;;;;iBACA,0BAAiB;AACb,mBAAO,KAAKH,eAAZ;AACH;AACD;;;;iBACA,uBAAc;AACV,mBAAO,KAAKF,iBAAL,CAAuBoB,QAA9B;AACH;AACD;;;;iBACA,oBAAW;AACP,mBAAO,KAAKhB,SAAZ;AACH;;;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;UACMiB,c;AACF,gCAAYC,WAAZ,EAAyBnC,IAAzB,EAA+B;AAAA;;AAC3B,eAAKmC,WAAL,GAAmBA,WAAnB;AACA,eAAKnC,IAAL,GAAYA,IAAZ;AACH;AACD;;;;;iBACA,kBAAS;AACL,iBAAKmC,WAAL,CAAiBN,iBAAjB;AACH;AACD;;;;eACA,eAAgB;AACZ,mBAAO,CAAC,CAAC,KAAK7B,IAAL,CAAUF,MAAnB;AACH;;;;;;AAELoC,oBAAc,CAACjH,IAAf,GAAsB,SAASmH,sBAAT,CAAgCjH,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAI+G,cAAV,EAA0B,gEAAyBtB,cAAzB,CAA1B,EAAoE,gEAAyBV,kBAAzB,CAApE,CAAP;AAA2H,OAAtL;;AACAgC,oBAAc,CAAC9G,IAAf,GAAsB,gEAAyB;AAAEC,YAAI,EAAE6G,cAAR;AAAwB5G,iBAAS,EAAE,CAAC,CAAC,kBAAD,CAAD,CAAnC;AAA2DQ,iBAAS,EAAE,CAAC,CAAD,EAAI,qBAAJ,CAAtE;AAAkGW,aAAK,EAAE,CAAzG;AAA4GC,YAAI,EAAE,CAAlH;AAAqHC,cAAM,EAAE,CAAC,CAAC,OAAD,EAAU,4BAAV,EAAwC,CAAxC,EAA2C,MAA3C,CAAD,EAAqD,CAAC,CAAD,EAAI,4BAAJ,CAArD,EAAwF,CAAC,YAAD,EAAe,EAAf,EAAmB,CAAnB,EAAsB,OAAtB,CAAxF,CAA7H;AAAsPC,gBAAQ,EAAE,SAASyF,uBAAT,CAAiC5G,EAAjC,EAAqCC,GAArC,EAA0C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC/V,yEAAsB,CAAtB,EAAyB,MAAzB;;AACA,iEAAc,CAAd;;AACA;;AACA,qEAAkB,CAAlB,EAAqBkE,6BAArB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,CAAjE;AACH;;AAAC,cAAIlE,EAAE,GAAG,CAAT,EAAY;AACV,oEAAiB,CAAjB;;AACA,4EAAyBC,GAAG,CAACsE,IAAJ,CAASsC,OAAlC;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,MAAlB,EAA0B5G,GAAG,CAAC6G,SAA9B;AACH;AAAE,SAVwC;AAUtC3E,kBAAU,EAAE,CAAC,oDAAD,EAAc,kEAAd,CAV0B;AAUOC,cAAM,EAAE,CAAC,6TAAD,CAVf;AAUgVC,qBAAa,EAAE,CAV/V;AAUkWC,uBAAe,EAAE;AAVnX,OAAzB,CAAtB;;AAWAmE,oBAAc,CAAClE,cAAf,GAAgC;AAAA,eAAM,CAClC;AAAE3C,cAAI,EAAEuF;AAAR,SADkC,EAElC;AAAEvF,cAAI,EAAE+C,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAE7C,gBAAI,EAAE,oDAAR;AAAgB8C,gBAAI,EAAE,CAAC+B,kBAAD;AAAtB,WAAD;AAA/B,SAFkC,CAAN;AAAA,OAAhC;;AAIA,OAAC,YAAY;AAAE,SAAC,OAAO5B,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB4D,cAAzB,EAAyC,CAAC;AACpG7G,cAAI,EAAE,uDAD8F;AAEpG8C,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE,kBADX;AAEC3B,oBAAQ,EAAE,8KAFX;AAGCkB,yBAAa,EAAE,gEAAkBY,IAHlC;AAICX,2BAAe,EAAE,sEAAwBY,MAJ1C;AAKCH,gBAAI,EAAE;AACF,uBAAS;AADP,aALP;AAQCX,kBAAM,EAAE,CAAC,6TAAD;AART,WAAD;AAF8F,SAAD,CAAzC,EAY1D,YAAY;AAAE,iBAAO,CAAC;AAAExC,gBAAI,EAAEuF;AAAR,WAAD,EAA2B;AAAEvF,gBAAI,EAAE+C,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AACxE7C,kBAAI,EAAE,oDADkE;AAExE8C,kBAAI,EAAE,CAAC+B,kBAAD;AAFkE,aAAD;AAA/B,WAA3B,CAAP;AAGF,SAf8C,EAe5C,IAf4C,CAAnD;AAee,OAf9B;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,UAAMsC,qBAAqB,GAAG;AAC1B;AACAC,qBAAa,EAAE,oEAAQ,OAAR,EAAiB,CAC5B,kEAAM,cAAN,EAAsB,kEAAM;AACxBC,mBAAS,EAAE,YADa;AAExBC,iBAAO,EAAE;AAFe,SAAN,CAAtB,CAD4B,EAK5B,kEAAM,SAAN,EAAiB,kEAAM;AACnBD,mBAAS,EAAE,UADQ;AAEnBC,iBAAO,EAAE;AAFU,SAAN,CAAjB,CAL4B,EAS5B,uEAAW,cAAX,EAA2B,oEAAQ,kCAAR,CAA3B,CAT4B,EAU5B,uEAAW,wBAAX,EAAqC,oEAAQ,mCAAR,EAA6C,kEAAM;AACpFA,iBAAO,EAAE;AAD2E,SAAN,CAA7C,CAArC,CAV4B,CAAjB;AAFW,OAA9B;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;UACMC,oB;;;;;AACF,sCAAY/L,OAAZ,EAAqBL,WAArB,EAAkCG,kBAAlC,EAAsDkM,SAAtD;AACA;AACAC,sBAFA,EAEgB;AAAA;;AAAA;;AACZ;AACA,iBAAKjM,OAAL,GAAeA,OAAf;AACA,iBAAKL,WAAL,GAAmBA,WAAnB;AACA,iBAAKG,kBAAL,GAA0BA,kBAA1B;AACA,iBAAKkM,SAAL,GAAiBA,SAAjB;AACA,iBAAKC,cAAL,GAAsBA,cAAtB;AACA;;AACA,iBAAKC,cAAL,GAAsB,GAAtB;AACA;;AACA,iBAAKC,UAAL,GAAkB,KAAlB;AACA;;AACA,iBAAKC,WAAL,GAAmB,IAAI,4CAAJ,EAAnB;AACA;;AACA,iBAAK5B,OAAL,GAAe,IAAI,4CAAJ,EAAf;AACA;;AACA,iBAAKY,QAAL,GAAgB,IAAI,4CAAJ,EAAhB;AACA;;AACA,iBAAKiB,eAAL,GAAuB,MAAvB;AACA;AACR;AACA;AACA;AACA;;AACQ,iBAAKC,eAAL,GAAuB,UAACC,MAAD,EAAY;AAC/B,mBAAKC,kBAAL;;AACA,mBAAKC,qBAAL;;AACA,mBAAO,OAAKC,aAAL,CAAmBJ,eAAnB,CAAmCC,MAAnC,CAAP;AACH,WAJD,CAxBY,CA6BZ;AACA;;;AACA,cAAIN,cAAc,CAAC1C,UAAf,KAA8B,WAA9B,IAA6C,CAAC0C,cAAc,CAACzC,mBAAjE,EAAsF;AAClF,mBAAKmD,KAAL,GAAa,WAAb;AACH,WAFD,MAGK,IAAIV,cAAc,CAAC1C,UAAf,KAA8B,KAAlC,EAAyC;AAC1C,mBAAKoD,KAAL,GAAa,KAAb;AACH,WAFI,MAGA;AACD,mBAAKA,KAAL,GAAa,QAAb;AACH,WAvCW,CAwCZ;AACA;;;AACA,cAAI,OAAKX,SAAL,CAAeY,OAAnB,EAA4B;AACxB,gBAAI,OAAKD,KAAL,KAAe,QAAnB,EAA6B;AACzB,qBAAKE,KAAL,GAAa,QAAb;AACH;;AACD,gBAAI,OAAKF,KAAL,KAAe,WAAnB,EAAgC;AAC5B,qBAAKE,KAAL,GAAa,OAAb;AACH;AACJ;;AAjDW;AAkDf;AACD;;;;;iBACA,+BAAsBN,MAAtB,EAA8B;AAC1B,iBAAKC,kBAAL;;AACA,iBAAKC,qBAAL;;AACA,mBAAO,KAAKC,aAAL,CAAmBI,qBAAnB,CAAyCP,MAAzC,CAAP;AACH;AACD;;;;iBACA,8BAAqBA,MAArB,EAA6B;AACzB,iBAAKC,kBAAL;;AACA,iBAAKC,qBAAL;;AACA,mBAAO,KAAKC,aAAL,CAAmBK,oBAAnB,CAAwCR,MAAxC,CAAP;AACH;AACD;;;;iBACA,wBAAehJ,KAAf,EAAsB;AAAA,gBACVyJ,SADU,GACazJ,KADb,CACVyJ,SADU;AAAA,gBACCC,OADD,GACa1J,KADb,CACC0J,OADD;;AAElB,gBAAKA,OAAO,KAAK,MAAZ,IAAsBD,SAAS,KAAK,MAArC,IAAgDC,OAAO,KAAK,QAAhE,EAA0E;AACtE,mBAAKC,aAAL;AACH;;AACD,gBAAID,OAAO,KAAK,SAAhB,EAA2B;AACvB;AACA;AACA,kBAAME,OAAO,GAAG,KAAK/B,QAArB;;AACA,mBAAKpL,OAAL,CAAaoN,GAAb,CAAiB,YAAM;AACnBD,uBAAO,CAACrC,IAAR;AACAqC,uBAAO,CAACpC,QAAR;AACH,eAHD;AAIH;AACJ;AACD;;;;iBACA,iBAAQ;AACJ,gBAAI,CAAC,KAAKoB,UAAV,EAAsB;AAClB,mBAAKE,eAAL,GAAuB,SAAvB;;AACA,mBAAKvM,kBAAL,CAAwByC,aAAxB;;AACA,mBAAK8K,qBAAL;AACH;AACJ;AACD;;;;iBACA,gBAAO;AACH;AACA;AACA;AACA,iBAAKhB,eAAL,GAAuB,QAAvB,CAJG,CAKH;AACA;AACA;;AACA,iBAAK1M,WAAL,CAAiBmD,aAAjB,CAA+BwK,YAA/B,CAA4C,UAA5C,EAAwD,EAAxD,EARG,CASH;AACA;;;AACA1C,wBAAY,CAAC,KAAK2C,kBAAN,CAAZ;AACA,mBAAO,KAAK/C,OAAZ;AACH;AACD;;;;iBACA,uBAAc;AACV,iBAAK2B,UAAL,GAAkB,IAAlB;;AACA,iBAAKe,aAAL;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,yBAAgB;AAAA;;AACZ,iBAAKlN,OAAL,CAAawN,gBAAb,CAA8BC,IAA9B,CAAmC,4DAAK,CAAL,CAAnC,EAA4CjM,SAA5C,CAAsD,YAAM;AACxD,oBAAI,CAACgJ,OAAL,CAAaM,IAAb;;AACA,oBAAI,CAACN,OAAL,CAAaO,QAAb;AACH,aAHD;AAIH;AACD;;;;iBACA,iCAAwB;AACpB,gBAAMlI,OAAO,GAAG,KAAKlD,WAAL,CAAiBmD,aAAjC;AACA,gBAAM4K,YAAY,GAAG,KAAKzB,cAAL,CAAoB0B,UAAzC;;AACA,gBAAID,YAAJ,EAAkB;AACd,kBAAIE,KAAK,CAACC,OAAN,CAAcH,YAAd,CAAJ,EAAiC;AAC7B;AACAA,4BAAY,CAACI,OAAb,CAAqB,UAAAC,QAAQ;AAAA,yBAAIlL,OAAO,CAACG,SAAR,CAAkBG,GAAlB,CAAsB4K,QAAtB,CAAJ;AAAA,iBAA7B;AACH,eAHD,MAIK;AACDlL,uBAAO,CAACG,SAAR,CAAkBG,GAAlB,CAAsBuK,YAAtB;AACH;AACJ;;AACD,gBAAI,KAAKzB,cAAL,CAAoBvC,kBAApB,KAA2C,QAA/C,EAAyD;AACrD7G,qBAAO,CAACG,SAAR,CAAkBG,GAAlB,CAAsB,sBAAtB;AACH;;AACD,gBAAI,KAAK8I,cAAL,CAAoBtC,gBAApB,KAAyC,KAA7C,EAAoD;AAChD9G,qBAAO,CAACG,SAAR,CAAkBG,GAAlB,CAAsB,mBAAtB;AACH;AACJ;AACD;;;;iBACA,8BAAqB;AACjB,gBAAI,KAAKuJ,aAAL,CAAmBsB,WAAnB,OAAqC,OAAOvG,SAAP,KAAqB,WAArB,IAAoCA,SAAzE,CAAJ,EAAyF;AACrF,oBAAMwG,KAAK,CAAC,0EAAD,CAAX;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,iCAAwB;AAAA;;AACpB,gBAAI,CAAC,KAAKV,kBAAV,EAA8B;AAC1B,mBAAKvN,OAAL,CAAaqD,iBAAb,CAA+B,YAAM;AACjC,sBAAI,CAACkK,kBAAL,GAA0BjK,UAAU,CAAC,YAAM;AACvC,sBAAM4K,YAAY,GAAG,MAAI,CAACvO,WAAL,CAAiBmD,aAAjB,CAA+BqL,aAA/B,CAA6C,eAA7C,CAArB;;AACA,sBAAMC,WAAW,GAAG,MAAI,CAACzO,WAAL,CAAiBmD,aAAjB,CAA+BqL,aAA/B,CAA6C,aAA7C,CAApB;;AACA,sBAAID,YAAY,IAAIE,WAApB,EAAiC;AAC7B;AACA;AACA,wBAAIC,cAAc,GAAG,IAArB;;AACA,wBAAI,MAAI,CAACrC,SAAL,CAAesC,SAAf,IACAC,QAAQ,CAACC,aAAT,YAAkCC,WADlC,IAEAP,YAAY,CAACQ,QAAb,CAAsBH,QAAQ,CAACC,aAA/B,CAFJ,EAEmD;AAC/CH,oCAAc,GAAGE,QAAQ,CAACC,aAA1B;AACH;;AACDN,gCAAY,CAACS,eAAb,CAA6B,aAA7B;AACAP,+BAAW,CAACQ,WAAZ,CAAwBV,YAAxB;AACAG,kCAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,cAAc,CAACpK,KAAf,EAAhE;;AACA,0BAAI,CAACmI,WAAL,CAAiBtB,IAAjB;;AACA,0BAAI,CAACsB,WAAL,CAAiBrB,QAAjB;AACH;AACJ,iBAlBmC,EAkBjC,MAAI,CAACmB,cAlB4B,CAApC;AAmBH,eApBD;AAqBH;AACJ;;;;QA9K8B,oE;;AAgLnCH,0BAAoB,CAAC3H,IAArB,GAA4B,SAASyK,4BAAT,CAAsCvK,CAAtC,EAAyC;AAAE,eAAO,KAAKA,CAAC,IAAIyH,oBAAV,EAAgC,gEAAyB,oDAAzB,CAAhC,EAAyE,gEAAyB,wDAAzB,CAAzE,EAAsH,gEAAyB,+DAAzB,CAAtH,EAA0K,gEAAyB,8DAAzB,CAA1K,EAAqN,gEAAyBzC,iBAAzB,CAArN,CAAP;AAA2Q,OAAlV;;AACAyC,0BAAoB,CAACxH,IAArB,GAA4B,gEAAyB;AAAEC,YAAI,EAAEuH,oBAAR;AAA8BtH,iBAAS,EAAE,CAAC,CAAC,qBAAD,CAAD,CAAzC;AAAoEC,iBAAS,EAAE,SAASoK,0BAAT,CAAoClK,EAApC,EAAwCC,GAAxC,EAA6C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACvL,sEAAmB,mEAAnB,EAAoC,CAApC;AACH;;AAAC,cAAIA,EAAE,GAAG,CAAT,EAAY;AACV,gBAAIE,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqDD,GAAG,CAAC6H,aAAJ,GAAoB5H,EAAE,CAACC,KAA5E;AACH;AAAE,SAL8C;AAK5CE,iBAAS,EAAE,CAAC,CAAD,EAAI,yBAAJ,CALiC;AAKDC,gBAAQ,EAAE,CALT;AAKYC,oBAAY,EAAE,SAAS4J,iCAAT,CAA2CnK,EAA3C,EAA+CC,GAA/C,EAAoD;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACzI,kFAA+B,aAA/B,EAA8C,SAASoK,4DAAT,CAAsE9I,MAAtE,EAA8E;AAAE,qBAAOrB,GAAG,CAACoK,cAAJ,CAAmB/I,MAAnB,CAAP;AAAoC,aAAlK;AACH;;AAAC,cAAItB,EAAE,GAAG,CAAT,EAAY;AACV,kFAA+B,QAA/B,EAAyCC,GAAG,CAACwH,eAA7C;AACH;AAAE,SAT8C;AAS5C3G,gBAAQ,EAAE,CAAC,wEAAD,CATkC;AASGE,aAAK,EAAE,CATV;AASaC,YAAI,EAAE,CATnB;AASsBC,cAAM,EAAE,CAAC,CAAC,aAAD,EAAgB,MAAhB,CAAD,EAA0B,CAAC,iBAAD,EAAoB,EAApB,CAA1B,CAT9B;AASkFC,gBAAQ,EAAE,SAASmJ,6BAAT,CAAuCtK,EAAvC,EAA2CC,GAA3C,EAAgD;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACvM,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,qEAAkB,CAAlB,EAAqBwE,2CAArB,EAAkE,CAAlE,EAAqE,CAArE,EAAwE,aAAxE,EAAuF,CAAvF;;AACA;;AACA,oEAAiB,CAAjB,EAAoB,KAApB;AACH;;AAAC,cAAIxE,EAAE,GAAG,CAAT,EAAY;AACV,oEAAiB,CAAjB;;AACA,sEAAmB,WAAnB,EAAgCC,GAAG,CAAC8H,KAApC,EAA2C,MAA3C,EAAmD9H,GAAG,CAACgI,KAAvD;AACH;AAAE,SAjB8C;AAiB5C9F,kBAAU,EAAE,CAAC,mEAAD,CAjBgC;AAiBNC,cAAM,EAAE,CAAC,+XAAD,CAjBF;AAiBqYC,qBAAa,EAAE,CAjBpZ;AAiBuZkC,YAAI,EAAE;AAAEgG,mBAAS,EAAE,CAACxD,qBAAqB,CAACC,aAAvB;AAAb;AAjB7Z,OAAzB,CAA5B;;AAkBAG,0BAAoB,CAAC5E,cAArB,GAAsC;AAAA,eAAM,CACxC;AAAE3C,cAAI,EAAE;AAAR,SADwC,EAExC;AAAEA,cAAI,EAAE;AAAR,SAFwC,EAGxC;AAAEA,cAAI,EAAE;AAAR,SAHwC,EAIxC;AAAEA,cAAI,EAAE;AAAR,SAJwC,EAKxC;AAAEA,cAAI,EAAE8E;AAAR,SALwC,CAAN;AAAA,OAAtC;;AAOAyC,0BAAoB,CAACvE,cAArB,GAAsC;AAClCkF,qBAAa,EAAE,CAAC;AAAElI,cAAI,EAAE,uDAAR;AAAmB8C,cAAI,EAAE,CAAC,mEAAD,EAAkB;AAAE,sBAAQ;AAAV,WAAlB;AAAzB,SAAD;AADmB,OAAtC;;AAGA,OAAC,YAAY;AAAE,SAAC,OAAOG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBsE,oBAAzB,EAA+C,CAAC;AAC1GvH,cAAI,EAAE,uDADoG;AAE1G8C,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE,qBADX;AAEC3B,oBAAQ,EAAE,yWAFX;AAGC;AACA;AACA;AACA;AACAmB,2BAAe,EAAE,sEAAwBkI,OAP1C;AAQCnI,yBAAa,EAAE,gEAAkBY,IARlC;AASCwH,sBAAU,EAAE,CAAC1D,qBAAqB,CAACC,aAAvB,CATb;AAUCjE,gBAAI,EAAE;AACF,uBAAS,yBADP;AAEF,0BAAY,iBAFV;AAGF,+BAAiB;AAHf,aAVP;AAeCX,kBAAM,EAAE,CAAC,+XAAD;AAfT,WAAD;AAFoG,SAAD,CAA/C,EAmB1D,YAAY;AAAE,iBAAO,CAAC;AAAExC,gBAAI,EAAE;AAAR,WAAD,EAA0B;AAAEA,gBAAI,EAAE;AAAR,WAA1B,EAAuD;AAAEA,gBAAI,EAAE;AAAR,WAAvD,EAA2F;AAAEA,gBAAI,EAAE;AAAR,WAA3F,EAAsH;AAAEA,gBAAI,EAAE8E;AAAR,WAAtH,CAAP;AAA4J,SAnBhH,EAmBkH;AAAEoD,uBAAa,EAAE,CAAC;AAC1LlI,gBAAI,EAAE,uDADoL;AAE1L8C,gBAAI,EAAE,CAAC,mEAAD,EAAkB;AAAE,wBAAQ;AAAV,aAAlB;AAFoL,WAAD;AAAjB,SAnBlH,CAAnD;AAsBC,OAtBhB;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACMgI,iB;;;;AAENA,uBAAiB,CAAClL,IAAlB,GAAyB,SAASmL,yBAAT,CAAmCjL,CAAnC,EAAsC;AAAE,eAAO,KAAKA,CAAC,IAAIgL,iBAAV,GAAP;AAAwC,OAAzG;;AACAA,uBAAiB,CAAChH,IAAlB,GAAyB,+DAAwB;AAAE9D,YAAI,EAAE8K;AAAR,OAAxB,CAAzB;AACAA,uBAAiB,CAAC/G,IAAlB,GAAyB,+DAAwB;AAAEM,eAAO,EAAE,CAAC,CACjD,kEADiD,EAEjD,gEAFiD,EAGjD,4DAHiD,EAIjD,wEAJiD,EAKjD,sEALiD,CAAD,EAMjD,sEANiD;AAAX,OAAxB,CAAzB;;AAOA,OAAC,YAAY;AAAE,SAAC,OAAOL,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B8G,iBAA1B,EAA6C;AAAE7G,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAACsD,oBAAD,EAAuBV,cAAvB,CAAP;AAAgD,WAA9E;AAAgFxC,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,kEAAD,EACrN,gEADqN,EAErN,4DAFqN,EAGrN,wEAHqN,EAIrN,sEAJqN,CAAP;AAI3L,WAJoF;AAIlFH,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAACqD,oBAAD,EAAuB,sEAAvB,CAAP;AAAiD;AAJU,SAA7C,CAAnD;AAI4F,OAJ3G;;AAKA,OAAC,YAAY;AAAE,SAAC,OAAOtE,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB6H,iBAAzB,EAA4C,CAAC;AACvG9K,cAAI,EAAE,sDADiG;AAEvG8C,cAAI,EAAE,CAAC;AACCuB,mBAAO,EAAE,CACL,kEADK,EAEL,gEAFK,EAGL,4DAHK,EAIL,wEAJK,EAKL,sEALK,CADV;AAQCH,mBAAO,EAAE,CAACqD,oBAAD,EAAuB,sEAAvB,CARV;AASCtD,wBAAY,EAAE,CAACsD,oBAAD,EAAuBV,cAAvB,CATf;AAUCmE,2BAAe,EAAE,CAACzD,oBAAD,EAAuBV,cAAvB;AAVlB,WAAD;AAFiG,SAAD,CAA5C,EAc1D,IAd0D,EAcpD,IAdoD,CAAnD;AAcO,OAdtB;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,UAAMoE,6BAA6B,GAAG,IAAI,4DAAJ,CAAmB,+BAAnB,EAAoD;AACtF5Q,kBAAU,EAAE,MAD0E;AAEtFC,eAAO,EAAE4Q;AAF6E,OAApD,CAAtC;AAIA;;AACA,eAASA,qCAAT,GAAiD;AAC7C,eAAO,IAAIpG,iBAAJ,EAAP;AACH;AACD;AACA;AACA;;;UACMqG,W;AACF,6BAAYC,QAAZ,EAAsBjD,KAAtB,EAA6BkD,SAA7B,EAAwCC,mBAAxC,EAA6DC,eAA7D,EAA8EC,cAA9E,EAA8F;AAAA;;AAC1F,eAAKJ,QAAL,GAAgBA,QAAhB;AACA,eAAKjD,KAAL,GAAaA,KAAb;AACA,eAAKkD,SAAL,GAAiBA,SAAjB;AACA,eAAKC,mBAAL,GAA2BA,mBAA3B;AACA,eAAKC,eAAL,GAAuBA,eAAvB;AACA,eAAKC,cAAL,GAAsBA,cAAtB;AACA;AACR;AACA;AACA;AACA;;AACQ,eAAKC,uBAAL,GAA+B,IAA/B;AACA;;AACA,eAAKC,uBAAL,GAA+B7E,cAA/B;AACA;;AACA,eAAK8E,0BAAL,GAAkCpE,oBAAlC;AACA;;AACA,eAAKqE,eAAL,GAAuB,uBAAvB;AACH;AACD;;;;;eACA,eAAyB;AACrB,gBAAMC,MAAM,GAAG,KAAKN,eAApB;AACA,mBAAOM,MAAM,GAAGA,MAAM,CAACC,kBAAV,GAA+B,KAAKL,uBAAjD;AACH,W;eACD,aAAuB3O,KAAvB,EAA8B;AAC1B,gBAAI,KAAKyO,eAAT,EAA0B;AACtB,mBAAKA,eAAL,CAAqBO,kBAArB,GAA0ChP,KAA1C;AACH,aAFD,MAGK;AACD,mBAAK2O,uBAAL,GAA+B3O,KAA/B;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,2BAAkBjD,SAAlB,EAA6BkS,MAA7B,EAAqC;AACjC,mBAAO,KAAKC,OAAL,CAAanS,SAAb,EAAwBkS,MAAxB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,0BAAiBxK,QAAjB,EAA2BwK,MAA3B,EAAmC;AAC/B,mBAAO,KAAKC,OAAL,CAAazK,QAAb,EAAuBwK,MAAvB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,cAAK9E,OAAL,EAAmC;AAAA,gBAArBxC,MAAqB,uEAAZ,EAAY;AAAA,gBAARsH,MAAQ;;AAC/B,gBAAME,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKX,cAAvB,CAAd,EAAsDO,MAAtD,CAAhB,CAD+B,CAE/B;AACA;;;AACAE,mBAAO,CAACtH,IAAR,GAAe;AAAEsC,qBAAO,EAAPA,OAAF;AAAWxC,oBAAM,EAANA;AAAX,aAAf,CAJ+B,CAK/B;AACA;;AACA,gBAAIwH,OAAO,CAACjH,mBAAR,KAAgCiC,OAApC,EAA6C;AACzCgF,qBAAO,CAACjH,mBAAR,GAA8BjC,SAA9B;AACH;;AACD,mBAAO,KAAKqJ,iBAAL,CAAuB,KAAKV,uBAA5B,EAAqDO,OAArD,CAAP;AACH;AACD;AACJ;AACA;;;;iBACI,mBAAU;AACN,gBAAI,KAAKH,kBAAT,EAA6B;AACzB,mBAAKA,kBAAL,CAAwB/F,OAAxB;AACH;AACJ;;;iBACD,uBAAc;AACV;AACA,gBAAI,KAAK0F,uBAAT,EAAkC;AAC9B,mBAAKA,uBAAL,CAA6B1F,OAA7B;AACH;AACJ;AACD;AACJ;AACA;;;;iBACI,kCAAyBsG,UAAzB,EAAqCN,MAArC,EAA6C;AACzC,gBAAMO,YAAY,GAAGP,MAAM,IAAIA,MAAM,CAACQ,gBAAjB,IAAqCR,MAAM,CAACQ,gBAAP,CAAwBC,QAAlF;;AACA,gBAAMA,QAAQ,GAAG,uDAASC,MAAT,CAAgB;AAC7BZ,oBAAM,EAAES,YAAY,IAAI,KAAKjB,SADA;AAE7BjI,uBAAS,EAAE,CAAC;AAAEvI,uBAAO,EAAEiK,iBAAX;AAA8B4H,wBAAQ,EAAEX;AAAxC,eAAD;AAFkB,aAAhB,CAAjB;;AAIA,gBAAMY,eAAe,GAAG,IAAI,mEAAJ,CAAoB,KAAKhB,0BAAzB,EAAqDI,MAAM,CAACQ,gBAA5D,EAA8EC,QAA9E,CAAxB;AACA,gBAAMI,YAAY,GAAGP,UAAU,CAACQ,MAAX,CAAkBF,eAAlB,CAArB;AACAC,wBAAY,CAACE,QAAb,CAAsBrF,cAAtB,GAAuCsE,MAAvC;AACA,mBAAOa,YAAY,CAACE,QAApB;AACH;AACD;AACJ;AACA;;;;iBACI,iBAAQC,OAAR,EAAiBC,UAAjB,EAA6B;AAAA;;AACzB,gBAAMjB,MAAM,GAAGG,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,IAAIrH,iBAAJ,EAAlB,CAAd,EAA0D,KAAK0G,cAA/D,CAAd,EAA8FwB,UAA9F,CAAf;;AACA,gBAAMX,UAAU,GAAG,KAAKY,cAAL,CAAoBlB,MAApB,CAAnB;;AACA,gBAAMmB,SAAS,GAAG,KAAKC,wBAAL,CAA8Bd,UAA9B,EAA0CN,MAA1C,CAAlB;;AACA,gBAAMjF,WAAW,GAAG,IAAIvB,cAAJ,CAAmB2H,SAAnB,EAA8Bb,UAA9B,CAApB;;AACA,gBAAIU,OAAO,YAAY,yDAAvB,EAAoC;AAChC,kBAAMhF,MAAM,GAAG,IAAI,kEAAJ,CAAmBgF,OAAnB,EAA4B,IAA5B,EAAkC;AAC7CK,yBAAS,EAAErB,MAAM,CAACpH,IAD2B;AAE7CmC,2BAAW,EAAXA;AAF6C,eAAlC,CAAf;AAIAA,yBAAW,CAACgG,QAAZ,GAAuBI,SAAS,CAAC3E,oBAAV,CAA+BR,MAA/B,CAAvB;AACH,aAND,MAOK;AACD,kBAAMyE,QAAQ,GAAG,KAAKa,eAAL,CAAqBtB,MAArB,EAA6BjF,WAA7B,CAAjB;;AACA,kBAAMiB,OAAM,GAAG,IAAI,mEAAJ,CAAoBgF,OAApB,EAA6BhK,SAA7B,EAAwCyJ,QAAxC,CAAf;;AACA,kBAAMc,UAAU,GAAGJ,SAAS,CAAC5E,qBAAV,CAAgCP,OAAhC,CAAnB,CAHC,CAID;;AACAjB,yBAAW,CAACgG,QAAZ,GAAuBQ,UAAU,CAACR,QAAlC;AACH,aAlBwB,CAmBzB;AACA;AACA;;;AACA,iBAAKxB,mBAAL,CAAyBiC,OAAzB,CAAiC,iEAAYC,eAA7C,EAA8DvE,IAA9D,CAAmE,iEAAUoD,UAAU,CAACoB,WAAX,EAAV,CAAnE,EAAwGzQ,SAAxG,CAAkH,UAAA0Q,KAAK,EAAI;AACvH,kBAAMlP,SAAS,GAAG6N,UAAU,CAACsB,cAAX,CAA0BnP,SAA5C;AACAkP,mBAAK,CAACE,OAAN,GAAgBpP,SAAS,CAACG,GAAV,CAAc,MAAI,CAACiN,eAAnB,CAAhB,GAAsDpN,SAAS,CAACC,MAAV,CAAiB,MAAI,CAACmN,eAAtB,CAAtD;AACH,aAHD;;AAIA,gBAAIG,MAAM,CAAC/G,mBAAX,EAAgC;AAC5B;AACAkI,uBAAS,CAACtF,WAAV,CAAsB5K,SAAtB,CAAgC,YAAM;AAClC,sBAAI,CAACmL,KAAL,CAAW0F,QAAX,CAAoB9B,MAAM,CAAC/G,mBAA3B,EAAgD+G,MAAM,CAAChH,UAAvD;AACH,eAFD;AAGH;;AACD,iBAAK+I,gBAAL,CAAsBhH,WAAtB,EAAmCiF,MAAnC;;AACA,iBAAKD,kBAAL,GAA0BhF,WAA1B;AACA,mBAAO,KAAKgF,kBAAZ;AACH;AACD;;;;iBACA,0BAAiBhF,WAAjB,EAA8BiF,MAA9B,EAAsC;AAAA;;AAClC;AACAjF,uBAAW,CAACiH,cAAZ,GAA6B/Q,SAA7B,CAAuC,YAAM;AACzC;AACA,kBAAI,OAAI,CAAC8O,kBAAL,IAA2BhF,WAA/B,EAA4C;AACxC,uBAAI,CAACgF,kBAAL,GAA0B,IAA1B;AACH;;AACD,kBAAIC,MAAM,CAAC/G,mBAAX,EAAgC;AAC5B,uBAAI,CAACmD,KAAL,CAAW6F,KAAX;AACH;AACJ,aARD;;AASA,gBAAI,KAAKlC,kBAAT,EAA6B;AACzB;AACA;AACA,mBAAKA,kBAAL,CAAwBiC,cAAxB,GAAyC/Q,SAAzC,CAAmD,YAAM;AACrD8J,2BAAW,CAACtB,iBAAZ,CAA8ByI,KAA9B;AACH,eAFD;;AAGA,mBAAKnC,kBAAL,CAAwB/F,OAAxB;AACH,aAPD,MAQK;AACD;AACAe,yBAAW,CAACtB,iBAAZ,CAA8ByI,KAA9B;AACH,aAtBiC,CAuBlC;;;AACA,gBAAIlC,MAAM,CAAC9G,QAAP,IAAmB8G,MAAM,CAAC9G,QAAP,GAAkB,CAAzC,EAA4C;AACxC6B,yBAAW,CAACoH,WAAZ,GAA0BlR,SAA1B,CAAoC;AAAA,uBAAM8J,WAAW,CAACqH,aAAZ,CAA0BpC,MAAM,CAAC9G,QAAjC,CAAN;AAAA,eAApC;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,wBAAe8G,MAAf,EAAuB;AACnB,gBAAMqC,aAAa,GAAG,IAAI,kEAAJ,EAAtB;AACAA,yBAAa,CAACC,SAAd,GAA0BtC,MAAM,CAACsC,SAAjC;;AACA,gBAAIC,gBAAgB,GAAG,KAAKlD,QAAL,CAAcmD,QAAd,GAAyBC,MAAzB,EAAvB,CAHmB,CAInB;;;AACA,gBAAMC,KAAK,GAAG1C,MAAM,CAACsC,SAAP,KAAqB,KAAnC;AACA,gBAAMK,MAAM,GAAI3C,MAAM,CAAC7G,kBAAP,KAA8B,MAA9B,IACX6G,MAAM,CAAC7G,kBAAP,KAA8B,OAA9B,IAAyC,CAACuJ,KAD/B,IAEX1C,MAAM,CAAC7G,kBAAP,KAA8B,KAA9B,IAAuCuJ,KAF5C;AAGA,gBAAME,OAAO,GAAG,CAACD,MAAD,IAAW3C,MAAM,CAAC7G,kBAAP,KAA8B,QAAzD;;AACA,gBAAIwJ,MAAJ,EAAY;AACRJ,8BAAgB,CAACM,IAAjB,CAAsB,GAAtB;AACH,aAFD,MAGK,IAAID,OAAJ,EAAa;AACdL,8BAAgB,CAACO,KAAjB,CAAuB,GAAvB;AACH,aAFI,MAGA;AACDP,8BAAgB,CAACQ,kBAAjB;AACH,aAlBkB,CAmBnB;;;AACA,gBAAI/C,MAAM,CAAC5G,gBAAP,KAA4B,KAAhC,EAAuC;AACnCmJ,8BAAgB,CAACS,GAAjB,CAAqB,GAArB;AACH,aAFD,MAGK;AACDT,8BAAgB,CAACU,MAAjB,CAAwB,GAAxB;AACH;;AACDZ,yBAAa,CAACE,gBAAd,GAAiCA,gBAAjC;AACA,mBAAO,KAAKlD,QAAL,CAAcqB,MAAd,CAAqB2B,aAArB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,yBAAgBrC,MAAhB,EAAwBjF,WAAxB,EAAqC;AACjC,gBAAMwF,YAAY,GAAGP,MAAM,IAAIA,MAAM,CAACQ,gBAAjB,IAAqCR,MAAM,CAACQ,gBAAP,CAAwBC,QAAlF;AACA,mBAAO,uDAASC,MAAT,CAAgB;AACnBZ,oBAAM,EAAES,YAAY,IAAI,KAAKjB,SADV;AAEnBjI,uBAAS,EAAE,CACP;AAAEvI,uBAAO,EAAE0K,cAAX;AAA2BmH,wBAAQ,EAAE5F;AAArC,eADO,EAEP;AAAEjM,uBAAO,EAAEgK,kBAAX;AAA+B6H,wBAAQ,EAAEX,MAAM,CAACpH;AAAhD,eAFO;AAFQ,aAAhB,CAAP;AAOH;;;;;;AAELwG,iBAAW,CAACvL,IAAZ,GAAmB,SAASqP,mBAAT,CAA6BnP,CAA7B,EAAgC;AAAE,eAAO,KAAKA,CAAC,IAAIqL,WAAV,EAAuB,uDAAgB,4DAAhB,CAAvB,EAAwD,uDAAgB,gEAAhB,CAAxD,EAA+F,uDAAgB,sDAAhB,CAA/F,EAAiI,uDAAgB,uEAAhB,CAAjI,EAA6K,uDAAgBA,WAAhB,EAA6B,EAA7B,CAA7K,EAA+M,uDAAgBF,6BAAhB,CAA/M,CAAP;AAAwQ,OAA7T;;AACAE,iBAAW,CAAC+D,KAAZ,GAAoB,yEAAmB;AAAE5U,eAAO,EAAE,SAAS2U,mBAAT,GAA+B;AAAE,iBAAO,IAAI9D,WAAJ,CAAgB,+DAAS,4DAAT,CAAhB,EAAmC,+DAAS,gEAAT,CAAnC,EAA4D,+DAAS,sDAAT,CAA5D,EAAgF,+DAAS,uEAAT,CAAhF,EAA8G,+DAASA,WAAT,EAAsB,EAAtB,CAA9G,EAAyI,+DAASF,6BAAT,CAAzI,CAAP;AAA2L,SAAvO;AAAyOkE,aAAK,EAAEhE,WAAhP;AAA6P9Q,kBAAU,EAAEyQ;AAAzQ,OAAnB,CAApB;;AACAK,iBAAW,CAACxI,cAAZ,GAA6B;AAAA,eAAM,CAC/B;AAAE3C,cAAI,EAAE;AAAR,SAD+B,EAE/B;AAAEA,cAAI,EAAE;AAAR,SAF+B,EAG/B;AAAEA,cAAI,EAAE;AAAR,SAH+B,EAI/B;AAAEA,cAAI,EAAE;AAAR,SAJ+B,EAK/B;AAAEA,cAAI,EAAEmL,WAAR;AAAqBtI,oBAAU,EAAE,CAAC;AAAE7C,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE;AAAR,WAArB;AAAjC,SAL+B,EAM/B;AAAEA,cAAI,EAAE8E,iBAAR;AAA2BjC,oBAAU,EAAE,CAAC;AAAE7C,gBAAI,EAAE,oDAAR;AAAgB8C,gBAAI,EAAE,CAACmI,6BAAD;AAAtB,WAAD;AAAvC,SAN+B,CAAN;AAAA,OAA7B;;AAQA,OAAC,YAAY;AAAE,SAAC,OAAOhI,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBkI,WAAzB,EAAsC,CAAC;AACjGnL,cAAI,EAAE,wDAD2F;AAEjG8C,cAAI,EAAE,CAAC;AAAEzI,sBAAU,EAAEyQ;AAAd,WAAD;AAF2F,SAAD,CAAtC,EAG1D,YAAY;AAAE,iBAAO,CAAC;AAAE9K,gBAAI,EAAE;AAAR,WAAD,EAA2B;AAAEA,gBAAI,EAAE;AAAR,WAA3B,EAA2D;AAAEA,gBAAI,EAAE;AAAR,WAA3D,EAAsF;AAAEA,gBAAI,EAAE;AAAR,WAAtF,EAA2H;AAAEA,gBAAI,EAAEmL,WAAR;AAAqBtI,sBAAU,EAAE,CAAC;AAC1K7C,kBAAI,EAAE;AADoK,aAAD,EAE1K;AACCA,kBAAI,EAAE;AADP,aAF0K;AAAjC,WAA3H,EAIX;AAAEA,gBAAI,EAAE8E,iBAAR;AAA2BjC,sBAAU,EAAE,CAAC;AAC1C7C,kBAAI,EAAE,oDADoC;AAE1C8C,kBAAI,EAAE,CAACmI,6BAAD;AAFoC,aAAD;AAAvC,WAJW,CAAP;AAOF,SAV8C,EAU5C,IAV4C,CAAnD;AAUe,OAV9B;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;AC1xBA,UAAItG,IAAI,GAAG;AACV,gBAAQ,wrCADE;AAEV,iBAAS,EAFC;AAGV,kBAAU;AAHA,OAAX;AAKAT,aAAO,CAACkL,UAAR,GAAqB,IAArB;AACAlL,aAAO,WAAP,GAAkBS,IAAlB;;;;;;;;;;;;;;;;ACLA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBU;;AAA6D;;AAAiC;;;;;;AAM5F;;;;;;AAA0B;;;;;;AAC1B;;;;;;AAA2B;;;;;;AAG7B;;AAA6D;;AAAgC;;;;UDV1F0K,c;AAUX,gCAAoBC,MAApB,EACoBC,EADpB,EAEoBC,EAFpB,EAEyC;AAAA;;AAFrB,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AARpB,eAAAC,SAAA,GAAY,UAAZ;AACA,eAAAC,OAAA,GAAU,KAAV;AAEA,eAAAC,YAAA,GAAe,2EAAf;AACA,eAAAC,eAAA,GAAkB,+EAAlB;AAKI;;;;iBAEJ,oBAAW;AACT,iBAAKC,IAAL,GAAY,KAAKN,EAAL,CAAQO,KAAR,CAAc;AACxBC,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWjP,QAAhB,CADc;AAExBkP,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWlP,QAAhB;AAFc,aAAd,CAAZ;AAID;;;iBAED,gBAAO;AACL,iBAAKwO,MAAL,CAAYW,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;;;iBAED,4BAAmB;AACjB,gBAAI,KAAKP,OAAT,EAAkB;AAChB,mBAAKD,SAAL,GAAiB,UAAjB;AACA,mBAAKC,OAAL,GAAe,KAAf;AACA,mBAAKF,EAAL,CAAQnS,YAAR;AACD,aAJD,MAIO;AACL,mBAAKoS,SAAL,GAAiB,MAAjB;AACA,mBAAKC,OAAL,GAAe,IAAf;AACA,mBAAKF,EAAL,CAAQnS,YAAR;AACD;AACF;;;;;;;yBApCUgS,c,EAAc,uH,EAAA,2H,EAAA,gI;AAAA,O;;;cAAdA,c;AAAc,8B;AAAA,iB;AAAA,e;AAAA,g6B;AAAA;AAAA;AClB3B;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AAEA;;AACE;;AAAsB;;AAAY;;AAClC;;AAAsC;;AAAqC;;AAC7E;;AAEA;;AACE;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AACF;;AACA;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAAQ;AAAA,qBAAS,IAAAa,gBAAA,EAAT;AAA2B,aAA3B;;AACN;;AACA;;AACF;;AACA;;AAAU;;AAAkC;;AAC5C;;AACF;;AACF;;AAEA;;AAAQ;AAAA,qBAAS,IAAAC,IAAA,EAAT;AAAe,aAAf;;AACN;;AACF;;AACF;;AACF;;AACF;;;;AApCO;;AAAA;;AAYE;;AAAA;;AAKa;;AAAA;;AAIL;;AAAA;;AAEM;;AAAA;;AACA;;AAAA;;AAGD;;AAAA;;;;;;qBDfR,CACV,kFADU;;AAEX;;;;;;;;;;;;;;;AEfH,UAAIxL,IAAI,GAAG;AACV,gBAAQ,6iBADE;AAEV,iBAAS,EAFC;AAGV,kBAAU;AAHA,OAAX;AAKAT,aAAO,CAACkL,UAAR,GAAqB,IAArB;AACAlL,aAAO,WAAP,GAAkBS,IAAlB;;;;;;;;;;;;;;;;ACNA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,eAASyL,iBAAT,CAA2BnL,QAA3B,EAA6C;AAClD,eAAO,oEAAQ,UAAR,EAAoB,CACzB,uEAAW,QAAX,EAAqB,CACnB,kEAAM;AACJoC,mBAAS,EAAE,kBADP;AAEJC,iBAAO,EAAE;AAFL,SAAN,CADmB,EAKnB,8EAAWrC,QAAX,wCAAwD,kEAAM;AAC5DoC,mBAAS,EAAE,eADiD;AAE5DC,iBAAO,EAAE;AAFmD,SAAN,CAAxD,CALmB,CAArB,CADyB,CAApB,CAAP;AAYD;;AAEM,UAAM+I,aAAa,GAAGD,iBAAiB,CAAC,GAAD,CAAvC","file":"main-login-login-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { CommonModule } from \"@angular/common\";\nimport { LoginComponent } from \"./login.component\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { IconModule } from \"@visurel/iconify-angular\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\n\nconst routes = [\n  {\n    path: \"\",\n    component: LoginComponent,\n  },\n];\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatIconModule,\n    MatSnackBarModule,\n    IconModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatCheckboxModule,\n  ],\n})\n\nexport class LoginModule {}\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true\n};\n/** Change event object emitted by MatCheckbox. */\nclass MatCheckboxChange {\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/** @docs-private */\nclass MatCheckboxBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxMixinBase {\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = () => { };\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || defaults;\n        this.color = this.defaultColor = this._options.color || defaults.color;\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Whether the checkbox is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => {\n                    this._onTouched();\n                    this._changeDetectorRef.markForCheck();\n                });\n            }\n        });\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    ngAfterViewChecked() { }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     */\n    get checked() { return this._checked; }\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() { return this._indeterminate; }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event) {\n        var _a;\n        const clickAction = (_a = this._options) === null || _a === void 0 ? void 0 : _a.clickAction;\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /** Focuses the checkbox. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix = newState === 2 /* Unchecked */ ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n        ɵngcc0.ɵɵviewQuery(MatRipple, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 20, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"span\", 5);\n        ɵngcc0.ɵɵelement(6, \"span\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"span\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"span\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r2 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked())(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(19, _c1));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCheckbox.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n];\nMatCheckbox.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    id: [{ type: Input }],\n    required: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    change: [{ type: Output }],\n    indeterminateChange: [{ type: Output }],\n    value: [{ type: Input }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    indeterminate: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <span class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <span matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n      <span class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></span>\\n    </span>\\n    <span class=\\\"mat-checkbox-frame\\\"></span>\\n    <span class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <span class=\\\"mat-checkbox-mixedmark\\\"></span>\\n    </span>\\n  </span>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) { return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator); };\nMatCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCheckboxRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based checkbox implementations. */\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵfac = function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); };\n_MatCheckboxRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵfac = function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); };\nMatCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ], MatCommonModule, _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n//# sourceMappingURL=checkbox.js.map","import { OverlayModule, OverlayConfig, Overlay } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, NgZone, ElementRef, ChangeDetectorRef, ViewChild, NgModule, Injector, TemplateRef, ɵɵdefineInjectable, ɵɵinject, INJECTOR, Injectable, Optional, SkipSelf } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Subject } from 'rxjs';\nimport { Platform } from '@angular/cdk/platform';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/portal';\nimport * as ɵngcc5 from '@angular/cdk/overlay';\nimport * as ɵngcc6 from '@angular/cdk/a11y';\nimport * as ɵngcc7 from '@angular/cdk/layout';\n\nfunction SimpleSnackBar_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function SimpleSnackBar_div_2_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.action(); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.data.action);\n} }\nfunction MatSnackBarContainer_ng_template_1_Template(rf, ctx) { }\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nclass MatSnackBarConfig {\n    constructor() {\n        /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n        this.politeness = 'assertive';\n        /**\n         * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n         * component or template, the announcement message will default to the specified message.\n         */\n        this.announcementMessage = '';\n        /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n        this.duration = 0;\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** The horizontal position to place the snack bar. */\n        this.horizontalPosition = 'center';\n        /** The vertical position to place the snack bar. */\n        this.verticalPosition = 'bottom';\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nclass MatSnackBarRef {\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the snack bar has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the snack bar has opened and appeared. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the snack bar action was called. */\n        this._onAction = new Subject();\n        /** Whether the snack bar was dismissed using the action button. */\n        this._dismissedByAction = false;\n        this.containerInstance = containerInstance;\n        // Dismiss snackbar on action.\n        this.onAction().subscribe(() => this.dismiss());\n        containerInstance._onExit.subscribe(() => this._finishDismiss());\n    }\n    /** Dismisses the snack bar. */\n    dismiss() {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /** Marks the snackbar action clicked. */\n    dismissWithAction() {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n        }\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * @breaking-change 8.0.0\n     */\n    closeWithAction() {\n        this.dismissWithAction();\n    }\n    /** Dismisses the snack bar after some duration */\n    _dismissAfter(duration) {\n        // Note that we need to cap the duration to the maximum value for setTimeout, because\n        // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n        this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n    }\n    /** Marks the snackbar as opened */\n    _open() {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    }\n    /** Cleans up the DOM after closing. */\n    _finishDismiss() {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    }\n    /** Gets an observable that is notified when the snack bar is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed;\n    }\n    /** Gets an observable that is notified when the snack bar has opened and appeared. */\n    afterOpened() {\n        return this.containerInstance._onEnter;\n    }\n    /** Gets an observable that is notified when the snack bar action is called. */\n    onAction() {\n        return this._onAction;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nclass SimpleSnackBar {\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /** If the action button should be shown. */\n    get hasAction() {\n        return !!this.data.action;\n    }\n}\nSimpleSnackBar.ɵfac = function SimpleSnackBar_Factory(t) { return new (t || SimpleSnackBar)(ɵngcc0.ɵɵdirectiveInject(MatSnackBarRef), ɵngcc0.ɵɵdirectiveInject(MAT_SNACK_BAR_DATA)); };\nSimpleSnackBar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SimpleSnackBar, selectors: [[\"simple-snack-bar\"]], hostAttrs: [1, \"mat-simple-snackbar\"], decls: 3, vars: 2, consts: [[\"class\", \"mat-simple-snackbar-action\", 4, \"ngIf\"], [1, \"mat-simple-snackbar-action\"], [\"mat-button\", \"\", 3, \"click\"]], template: function SimpleSnackBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\");\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, SimpleSnackBar_div_2_Template, 3, 1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.data.message);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasAction);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton], styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nSimpleSnackBar.ctorParameters = () => [\n    { type: MatSnackBarRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DATA,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SimpleSnackBar, [{\n        type: Component,\n        args: [{\n                selector: 'simple-snack-bar',\n                template: \"<span>{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-simple-snackbar'\n                },\n                styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: MatSnackBarRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DATA]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nconst matSnackBarAnimations = {\n    /** Animation that shows and hides a snack bar. */\n    snackBarState: trigger('state', [\n        state('void, hidden', style({\n            transform: 'scale(0.8)',\n            opacity: 0,\n        })),\n        state('visible', style({\n            transform: 'scale(1)',\n            opacity: 1,\n        })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n            opacity: 0\n        }))),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\nclass MatSnackBarContainer extends BasePortalOutlet {\n    constructor(_ngZone, _elementRef, _changeDetectorRef, _platform, \n    /** The snack bar configuration. */\n    snackBarConfig) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._platform = _platform;\n        this.snackBarConfig = snackBarConfig;\n        /** The number of milliseconds to wait before announcing the snack bar's content. */\n        this._announceDelay = 150;\n        /** Whether the component has been destroyed. */\n        this._destroyed = false;\n        /** Subject for notifying that the snack bar has announced to screen readers. */\n        this._onAnnounce = new Subject();\n        /** Subject for notifying that the snack bar has exited from view. */\n        this._onExit = new Subject();\n        /** Subject for notifying that the snack bar has finished entering the view. */\n        this._onEnter = new Subject();\n        /** The state of the snack bar animations. */\n        this._animationState = 'void';\n        /**\n         * Attaches a DOM portal to the snack bar container.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            this._assertNotAttached();\n            this._applySnackBarClasses();\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        // Use aria-live rather than a live role like 'alert' or 'status'\n        // because NVDA and JAWS have show inconsistent behavior with live roles.\n        if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n            this._live = 'assertive';\n        }\n        else if (snackBarConfig.politeness === 'off') {\n            this._live = 'off';\n        }\n        else {\n            this._live = 'polite';\n        }\n        // Only set role for Firefox. Set role based on aria-live because setting role=\"alert\" implies\n        // aria-live=\"assertive\" which may cause issues if aria-live is set to \"polite\" above.\n        if (this._platform.FIREFOX) {\n            if (this._live === 'polite') {\n                this._role = 'status';\n            }\n            if (this._live === 'assertive') {\n                this._role = 'alert';\n            }\n        }\n    }\n    /** Attach a component portal as content to this snack bar container. */\n    attachComponentPortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /** Attach a template portal as content to this snack bar container. */\n    attachTemplatePortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Handle end of animations, updating the state of the snackbar. */\n    onAnimationEnd(event) {\n        const { fromState, toState } = event;\n        if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n            this._completeExit();\n        }\n        if (toState === 'visible') {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            const onEnter = this._onEnter;\n            this._ngZone.run(() => {\n                onEnter.next();\n                onEnter.complete();\n            });\n        }\n    }\n    /** Begin animation of snack bar entrance into view. */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n            this._screenReaderAnnounce();\n        }\n    }\n    /** Begin animation of the snack bar exiting from view. */\n    exit() {\n        // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n        // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n        // `MatSnackBar.open`).\n        this._animationState = 'hidden';\n        // Mark this element with an 'exit' attribute to indicate that the snackbar has\n        // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n        // test harness.\n        this._elementRef.nativeElement.setAttribute('mat-exit', '');\n        // If the snack bar hasn't been announced by the time it exits it wouldn't have been open\n        // long enough to visually read it either, so clear the timeout for announcing.\n        clearTimeout(this._announceTimeoutId);\n        return this._onExit;\n    }\n    /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n    ngOnDestroy() {\n        this._destroyed = true;\n        this._completeExit();\n    }\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     */\n    _completeExit() {\n        this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n            this._onExit.next();\n            this._onExit.complete();\n        });\n    }\n    /** Applies the various positioning and user-configured CSS classes to the snack bar. */\n    _applySnackBarClasses() {\n        const element = this._elementRef.nativeElement;\n        const panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach(cssClass => element.classList.add(cssClass));\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n        if (this.snackBarConfig.horizontalPosition === 'center') {\n            element.classList.add('mat-snack-bar-center');\n        }\n        if (this.snackBarConfig.verticalPosition === 'top') {\n            element.classList.add('mat-snack-bar-top');\n        }\n    }\n    /** Asserts that no content is already attached to the container. */\n    _assertNotAttached() {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    }\n    /**\n     * Starts a timeout to move the snack bar content to the live region so screen readers will\n     * announce it.\n     */\n    _screenReaderAnnounce() {\n        if (!this._announceTimeoutId) {\n            this._ngZone.runOutsideAngular(() => {\n                this._announceTimeoutId = setTimeout(() => {\n                    const inertElement = this._elementRef.nativeElement.querySelector('[aria-hidden]');\n                    const liveElement = this._elementRef.nativeElement.querySelector('[aria-live]');\n                    if (inertElement && liveElement) {\n                        // If an element in the snack bar content is focused before being moved\n                        // track it and restore focus after moving to the live region.\n                        let focusedElement = null;\n                        if (this._platform.isBrowser &&\n                            document.activeElement instanceof HTMLElement &&\n                            inertElement.contains(document.activeElement)) {\n                            focusedElement = document.activeElement;\n                        }\n                        inertElement.removeAttribute('aria-hidden');\n                        liveElement.appendChild(inertElement);\n                        focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.focus();\n                        this._onAnnounce.next();\n                        this._onAnnounce.complete();\n                    }\n                }, this._announceDelay);\n            });\n        }\n    }\n}\nMatSnackBarContainer.ɵfac = function MatSnackBarContainer_Factory(t) { return new (t || MatSnackBarContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(MatSnackBarConfig)); };\nMatSnackBarContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSnackBarContainer, selectors: [[\"snack-bar-container\"]], viewQuery: function MatSnackBarContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 3);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [1, \"mat-snack-bar-container\"], hostVars: 1, hostBindings: function MatSnackBarContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@state.done\", function MatSnackBarContainer_animation_state_done_HostBindingHandler($event) { return ctx.onAnimationEnd($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@state\", ctx._animationState);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 2, consts: [[\"aria-hidden\", \"true\"], [\"cdkPortalOutlet\", \"\"]], template: function MatSnackBarContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSnackBarContainer_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-live\", ctx._live)(\"role\", ctx._role);\n    } }, directives: [ɵngcc4.CdkPortalOutlet], styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"], encapsulation: 2, data: { animation: [matSnackBarAnimations.snackBarState] } });\nMatSnackBarContainer.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Platform },\n    { type: MatSnackBarConfig }\n];\nMatSnackBarContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSnackBarContainer, [{\n        type: Component,\n        args: [{\n                selector: 'snack-bar-container',\n                template: \"<!-- Initially holds the snack bar content, will be empty after announcing to screen readers. -->\\n<div aria-hidden=\\\"true\\\">\\n  <ng-template cdkPortalOutlet></ng-template>\\n</div>\\n\\n<!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n<div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\"></div>\\n\",\n                // In Ivy embedded views will be change detected from their declaration place, rather than\n                // where they were stamped out. This means that we can't have the snack bar container be OnPush,\n                // because it might cause snack bars that were opened from a template not to be out of date.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                animations: [matSnackBarAnimations.snackBarState],\n                host: {\n                    'class': 'mat-snack-bar-container',\n                    '[@state]': '_animationState',\n                    '(@state.done)': 'onAnimationEnd($event)'\n                },\n                styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc3.Platform }, { type: MatSnackBarConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSnackBarModule {\n}\nMatSnackBarModule.ɵfac = function MatSnackBarModule_Factory(t) { return new (t || MatSnackBarModule)(); };\nMatSnackBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSnackBarModule });\nMatSnackBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[\n            OverlayModule,\n            PortalModule,\n            CommonModule,\n            MatButtonModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSnackBarModule, { declarations: function () { return [MatSnackBarContainer, SimpleSnackBar]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        CommonModule,\n        MatButtonModule,\n        MatCommonModule]; }, exports: function () { return [MatSnackBarContainer, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSnackBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    CommonModule,\n                    MatButtonModule,\n                    MatCommonModule,\n                ],\n                exports: [MatSnackBarContainer, MatCommonModule],\n                declarations: [MatSnackBarContainer, SimpleSnackBar],\n                entryComponents: [MatSnackBarContainer, SimpleSnackBar]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify default snack bar. */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nclass MatSnackBar {\n    constructor(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._injector = _injector;\n        this._breakpointObserver = _breakpointObserver;\n        this._parentSnackBar = _parentSnackBar;\n        this._defaultConfig = _defaultConfig;\n        /**\n         * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n         * If there is a parent snack-bar service, all operations should delegate to that parent\n         * via `_openedSnackBarRef`.\n         */\n        this._snackBarRefAtThisLevel = null;\n        /** The component that should be rendered as the snack bar's simple component. */\n        this.simpleSnackBarComponent = SimpleSnackBar;\n        /** The container component that attaches the provided template or component. */\n        this.snackBarContainerComponent = MatSnackBarContainer;\n        /** The CSS class to applie for handset mode. */\n        this.handsetCssClass = 'mat-snack-bar-handset';\n    }\n    /** Reference to the currently opened snackbar at *any* level. */\n    get _openedSnackBarRef() {\n        const parent = this._parentSnackBar;\n        return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n    }\n    set _openedSnackBarRef(value) {\n        if (this._parentSnackBar) {\n            this._parentSnackBar._openedSnackBarRef = value;\n        }\n        else {\n            this._snackBarRefAtThisLevel = value;\n        }\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param component Component to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromComponent(component, config) {\n        return this._attach(component, config);\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom template for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param template Template to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromTemplate(template, config) {\n        return this._attach(template, config);\n    }\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param message The message to show in the snackbar.\n     * @param action The label for the snackbar action.\n     * @param config Additional configuration options for the snackbar.\n     */\n    open(message, action = '', config) {\n        const _config = Object.assign(Object.assign({}, this._defaultConfig), config);\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message, action };\n        // Since the snack bar has `role=\"alert\"`, we don't\n        // want to announce the same message twice.\n        if (_config.announcementMessage === message) {\n            _config.announcementMessage = undefined;\n        }\n        return this.openFromComponent(this.simpleSnackBarComponent, _config);\n    }\n    /**\n     * Dismisses the currently-visible snack bar.\n     */\n    dismiss() {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    }\n    ngOnDestroy() {\n        // Only dismiss the snack bar at the current level on destroy.\n        if (this._snackBarRefAtThisLevel) {\n            this._snackBarRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the snack bar container component to the overlay.\n     */\n    _attachSnackBarContainer(overlayRef, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatSnackBarConfig, useValue: config }]\n        });\n        const containerPortal = new ComponentPortal(this.snackBarContainerComponent, config.viewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    }\n    /**\n     * Places a new component or a template as the content of the snack bar container.\n     */\n    _attach(content, userConfig) {\n        const config = Object.assign(Object.assign(Object.assign({}, new MatSnackBarConfig()), this._defaultConfig), userConfig);\n        const overlayRef = this._createOverlay(config);\n        const container = this._attachSnackBarContainer(overlayRef, config);\n        const snackBarRef = new MatSnackBarRef(container, overlayRef);\n        if (content instanceof TemplateRef) {\n            const portal = new TemplatePortal(content, null, {\n                $implicit: config.data,\n                snackBarRef\n            });\n            snackBarRef.instance = container.attachTemplatePortal(portal);\n        }\n        else {\n            const injector = this._createInjector(config, snackBarRef);\n            const portal = new ComponentPortal(content, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n            // We can't pass this via the injector, because the injector is created earlier.\n            snackBarRef.instance = contentRef.instance;\n        }\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver.observe(Breakpoints.HandsetPortrait).pipe(takeUntil(overlayRef.detachments())).subscribe(state => {\n            const classList = overlayRef.overlayElement.classList;\n            state.matches ? classList.add(this.handsetCssClass) : classList.remove(this.handsetCssClass);\n        });\n        if (config.announcementMessage) {\n            // Wait until the snack bar contents have been announced then deliver this message.\n            container._onAnnounce.subscribe(() => {\n                this._live.announce(config.announcementMessage, config.politeness);\n            });\n        }\n        this._animateSnackBar(snackBarRef, config);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    }\n    /** Animates the old snack bar out and the new one in. */\n    _animateSnackBar(snackBarRef, config) {\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe(() => {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (this._openedSnackBarRef == snackBarRef) {\n                this._openedSnackBarRef = null;\n            }\n            if (config.announcementMessage) {\n                this._live.clear();\n            }\n        });\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe(() => {\n                snackBarRef.containerInstance.enter();\n            });\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration && config.duration > 0) {\n            snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration));\n        }\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified snack bar config.\n     */\n    _createOverlay(config) {\n        const overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        let positionStrategy = this._overlay.position().global();\n        // Set horizontal position.\n        const isRtl = config.direction === 'rtl';\n        const isLeft = (config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl));\n        const isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @param config Config that was used to create the snack bar.\n     * @param snackBarRef Reference to the snack bar.\n     */\n    _createInjector(config, snackBarRef) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        return Injector.create({\n            parent: userInjector || this._injector,\n            providers: [\n                { provide: MatSnackBarRef, useValue: snackBarRef },\n                { provide: MAT_SNACK_BAR_DATA, useValue: config.data }\n            ]\n        });\n    }\n}\nMatSnackBar.ɵfac = function MatSnackBar_Factory(t) { return new (t || MatSnackBar)(ɵngcc0.ɵɵinject(ɵngcc5.Overlay), ɵngcc0.ɵɵinject(ɵngcc6.LiveAnnouncer), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc7.BreakpointObserver), ɵngcc0.ɵɵinject(MatSnackBar, 12), ɵngcc0.ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); };\nMatSnackBar.ɵprov = ɵɵdefineInjectable({ factory: function MatSnackBar_Factory() { return new MatSnackBar(ɵɵinject(Overlay), ɵɵinject(LiveAnnouncer), ɵɵinject(INJECTOR), ɵɵinject(BreakpointObserver), ɵɵinject(MatSnackBar, 12), ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); }, token: MatSnackBar, providedIn: MatSnackBarModule });\nMatSnackBar.ctorParameters = () => [\n    { type: Overlay },\n    { type: LiveAnnouncer },\n    { type: Injector },\n    { type: BreakpointObserver },\n    { type: MatSnackBar, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: MatSnackBarConfig, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSnackBar, [{\n        type: Injectable,\n        args: [{ providedIn: MatSnackBarModule }]\n    }], function () { return [{ type: ɵngcc5.Overlay }, { type: ɵngcc6.LiveAnnouncer }, { type: ɵngcc0.Injector }, { type: ɵngcc7.BreakpointObserver }, { type: MatSnackBar, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: MatSnackBarConfig, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, matSnackBarAnimations };\n\n//# sourceMappingURL=snack-bar.js.map","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M12 14c.04 0 .08-.01.12-.01l-2.61-2.61c0 .04-.01.08-.01.12A2.5 2.5 0 0 0 12 14zm1.01-4.79l1.28 1.28c-.26-.57-.71-1.03-1.28-1.28zm7.81 2.29A9.77 9.77 0 0 0 12 6c-.68 0-1.34.09-1.99.22l.92.92c.35-.09.7-.14 1.07-.14c2.48 0 4.5 2.02 4.5 4.5c0 .37-.06.72-.14 1.07l2.05 2.05c.98-.86 1.81-1.91 2.41-3.12zM12 17c.95 0 1.87-.13 2.75-.39l-.98-.98c-.54.24-1.14.37-1.77.37a4.507 4.507 0 0 1-4.14-6.27L6.11 7.97c-1.22.91-2.23 2.1-2.93 3.52A9.78 9.78 0 0 0 12 17z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M12 6a9.77 9.77 0 0 1 8.82 5.5a9.647 9.647 0 0 1-2.41 3.12l1.41 1.41c1.39-1.23 2.49-2.77 3.18-4.53C21.27 7.11 17 4 12 4c-1.27 0-2.49.2-3.64.57l1.65 1.65C10.66 6.09 11.32 6 12 6zm2.28 4.49l2.07 2.07c.08-.34.14-.7.14-1.07C16.5 9.01 14.48 7 12 7c-.37 0-.72.06-1.07.14L13 9.21c.58.25 1.03.71 1.28 1.28zM2.01 3.87l2.68 2.68A11.738 11.738 0 0 0 1 11.5C2.73 15.89 7 19 12 19c1.52 0 2.98-.29 4.32-.82l3.42 3.42l1.41-1.41L3.42 2.45L2.01 3.87zm7.5 7.5l2.61 2.61c-.04.01-.08.02-.12.02a2.5 2.5 0 0 1-2.5-2.5c0-.05.01-.08.01-.13zm-3.4-3.4l1.75 1.75a4.6 4.6 0 0 0-.36 1.78a4.507 4.507 0 0 0 6.27 4.14l.98.98c-.88.24-1.8.38-2.75.38a9.77 9.77 0 0 1-8.82-5.5c.7-1.43 1.72-2.61 2.93-3.53z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport icVisibility from '@iconify/icons-ic/twotone-visibility';\nimport icVisibilityOff from '@iconify/icons-ic/twotone-visibility-off';\nimport { fadeInUp400ms } from '../../../@vex/animations/fade-in-up.animation';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    fadeInUp400ms\n  ]\n})\n\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n\n  inputType = 'password';\n  visible = false;\n\n  icVisibility = icVisibility;\n  icVisibilityOff = icVisibilityOff;\n\n  constructor(private router: Router,\n              private fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  send() {\n    this.router.navigate(['/']);\n  }\n\n  toggleVisibility() {\n    if (this.visible) {\n      this.inputType = 'password';\n      this.visible = false;\n      this.cd.markForCheck();\n    } else {\n      this.inputType = 'text';\n      this.visible = true;\n      this.cd.markForCheck();\n    }\n  }\n}\n","<div class=\"w-full h-full bg-pattern\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <div @fadeInUp class=\"card overflow-hidden w-full max-w-xs\">\n    <div class=\"p-6 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <div class=\"fill-current text-center\">\n        <img class=\"w-16\" src=\"assets/img/demo/logo.svg\">\n      </div>\n    </div>\n\n    <div class=\"text-center mt-4\">\n      <h2 class=\"title m-0\">Welcome back</h2>\n      <h4 class=\"body-2 text-secondary m-0\">Sign in with your credentials below.x</h4>\n    </div>\n\n    <div [formGroup]=\"form\" class=\"p-6\" fxLayout=\"column\" fxLayoutGap=\"16px\">\n      <div fxFlex=\"auto\" fxLayout=\"column\">\n        <mat-form-field fxFlex=\"grow\">\n          <mat-label>Username</mat-label>\n          <input formControlName=\"username\" matInput required>\n          <mat-error *ngIf=\"form.get('username').hasError('required')\">We need an username to log you in</mat-error>\n        </mat-form-field>\n        <mat-form-field fxFlex=\"grow\">\n          <mat-label>Password</mat-label>\n          <input [type]=\"inputType\" formControlName=\"password\" matInput required>\n          <button (click)=\"toggleVisibility()\" mat-icon-button matSuffix matTooltip=\"Toggle Visibility\" type=\"button\">\n            <mat-icon *ngIf=\"visible\" [icIcon]=\"icVisibility\"></mat-icon>\n            <mat-icon *ngIf=\"!visible\" [icIcon]=\"icVisibilityOff\"></mat-icon>\n          </button>\n          <mat-hint>Click the eye to toggle visibility</mat-hint>\n          <mat-error *ngIf=\"form.get('password').hasError('required')\">We need a password to log you in</mat-error>\n        </mat-form-field>\n      </div>\n\n      <button (click)=\"send()\" color=\"primary\" mat-raised-button type=\"button\">\n        SIGN IN\n      </button>\n    </div>\n  </div>\n</div>\n","var data = {\n\t\"body\": \"<path opacity=\\\".3\\\" d=\\\"M12 6a9.77 9.77 0 0 0-8.82 5.5C4.83 14.87 8.21 17 12 17s7.17-2.13 8.82-5.5A9.77 9.77 0 0 0 12 6zm0 10c-2.48 0-4.5-2.02-4.5-4.5S9.52 7 12 7s4.5 2.02 4.5 4.5S14.48 16 12 16z\\\" fill=\\\"currentColor\\\"/><path d=\\\"M12 4C7 4 2.73 7.11 1 11.5C2.73 15.89 7 19 12 19s9.27-3.11 11-7.5C21.27 7.11 17 4 12 4zm0 13a9.77 9.77 0 0 1-8.82-5.5C4.83 8.13 8.21 6 12 6s7.17 2.13 8.82 5.5A9.77 9.77 0 0 1 12 17zm0-10c-2.48 0-4.5 2.02-4.5 4.5S9.52 16 12 16s4.5-2.02 4.5-4.5S14.48 7 12 7zm0 7a2.5 2.5 0 0 1 0-5a2.5 2.5 0 0 1 0 5z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function fadeInUpAnimation(duration: number) {\r\n  return trigger('fadeInUp', [\r\n    transition(':enter', [\r\n      style({\r\n        transform: 'translateY(20px)',\r\n        opacity: 0\r\n      }),\r\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\r\n        transform: 'translateY(0)',\r\n        opacity: 1\r\n      }))\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const fadeInUp400ms = fadeInUpAnimation(400);\r\n"]}