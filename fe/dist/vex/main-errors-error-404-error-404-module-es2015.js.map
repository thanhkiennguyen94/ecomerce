{"version":3,"sources":["./src/app/main/errors/error-404/error-404.component.ts","./src/app/main/errors/error-404/error-404.component.html","./node_modules/ngx-quicklink/__ivy_ngcc__/fesm2015/ngx-quicklink.js","./src/app/main/errors/error-404/error-404.module.ts","./src/app/main/errors/error-404/error-404-routing.module.ts"],"names":[],"mappings":"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","file":"main-errors-error-404-error-404-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport icSearch from '@iconify/icons-ic/twotone-search';\n\n@Component({\n  selector: 'vex-error404',\n  templateUrl: './error-404.component.html',\n  styleUrls: ['./error-404.component.scss']\n})\nexport class Error404Component implements OnInit {\n\n  icSearch = icSearch;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"w-full p-gutter text-center\">\n  <img class=\"w-full max-w-lg mx-auto mb-6\" src=\"assets/img/illustrations/data_center.svg\">\n\n  <h1 class=\"display-3 font-medium m-0\">404</h1>\n  <h2 class=\"headline m-0\">Page not found.</h2>\n\n  <div class=\"bg-card rounded-full overflow-hidden relative ltr:pl-5 rtl:pr-5 h-12 max-w-md w-full shadow-8 mx-auto mt-6\"\n       fxLayout=\"row\"\n       fxLayoutAlign=\"start center\">\n    <ic-icon [icon]=\"icSearch\" class=\"text-secondary\" fxFlex=\"none\" height=\"24px\" width=\"24px\"></ic-icon>\n    <input class=\"border-0 h-12 outline-none ltr:pl-4 rtl:pr-4 placeholder:text-secondary bg-card\"\n           fxFlex=\"auto\"\n           placeholder=\"Search for other pages ...\"\n           type=\"text\">\n  </div>\n</div>\n","import { Injectable, InjectionToken, NgZone, Directive, Inject, ElementRef, Optional, Input, NgModule } from '@angular/core';\nimport { Router, PRIMARY_OUTLET, RouterPreloader, RouterLink, RouterLinkWithHref } from '@angular/router';\nimport { EMPTY } from 'rxjs';\n\n// Using a global registry so we can keep it populated across lazy-loaded\n// modules with different parent injectors which create instance of the registry.\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/router';\nconst globalRegistry = [];\nclass PrefetchRegistry {\n    constructor(router) {\n        this.router = router;\n        this.trees = globalRegistry;\n    }\n    add(tree) {\n        this.trees.push(tree);\n    }\n    shouldPrefetch(url) {\n        const tree = this.router.parseUrl(url);\n        return this.trees.some(containsTree.bind(null, tree));\n    }\n}\nPrefetchRegistry.ɵfac = function PrefetchRegistry_Factory(t) { return new (t || PrefetchRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.Router)); };\nPrefetchRegistry.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: PrefetchRegistry, factory: PrefetchRegistry.ɵfac });\nPrefetchRegistry.ctorParameters = () => [\n    { type: Router }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PrefetchRegistry, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.Router }]; }, null); })();\nfunction containsQueryParams(container, containee) {\n    // TODO: This does not handle array params correctly.\n    return (Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(key => containee[key] === container[key]));\n}\nfunction containsTree(containee, container) {\n    return (containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root, containee.root.segments));\n}\nfunction containsSegmentGroup(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        const current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        if (!containee.hasChildren())\n            return true;\n        for (const c in containee.children) {\n            if (!container.children[c])\n                break;\n            if (containsSegmentGroup(container.children[c], containee.children[c], containee.children[c].segments))\n                return true;\n        }\n        return false;\n    }\n    else {\n        const current = containeePaths.slice(0, container.segments.length);\n        const next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroup(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every((a, i) => a.path === bs[i].path || a.path.startsWith(':') || bs[i].path.startsWith(':'));\n}\n\nconst ɵ0 = function (cb) {\n    const start = Date.now();\n    return setTimeout(function () {\n        cb({\n            didTimeout: false,\n            timeRemaining: function () {\n                return Math.max(0, 50 - (Date.now() - start));\n            }\n        });\n    }, 1);\n}, ɵ1 = () => { };\nconst requestIdleCallback = typeof window !== 'undefined'\n    ? window.requestIdleCallback || ɵ0\n    : ɵ1;\nconst observerSupported = () => typeof window !== 'undefined' ? !!window.IntersectionObserver : false;\nconst ɵ2 = observerSupported;\nconst LinkHandler = new InjectionToken('LinkHandler');\nclass ObservableLinkHandler {\n    constructor(loader, registry, ngZone) {\n        this.loader = loader;\n        this.registry = registry;\n        this.ngZone = ngZone;\n        this.elementLink = new Map();\n        this.observer = observerSupported()\n            ? new IntersectionObserver(entries => {\n                entries.forEach(entry => {\n                    if (entry.isIntersecting) {\n                        const link = entry.target;\n                        const routerLink = this.elementLink.get(link);\n                        if (!routerLink || !routerLink.urlTree)\n                            return;\n                        this.registry.add(routerLink.urlTree);\n                        this.observer.unobserve(link);\n                        requestIdleCallback(() => {\n                            this.loader.preload().subscribe(() => void 0);\n                        });\n                    }\n                });\n            })\n            : null;\n    }\n    register(el) {\n        this.elementLink.set(el.element, el);\n        this.ngZone.runOutsideAngular(() => {\n            this.observer.observe(el.element);\n        });\n    }\n    // First call to unregister will not hit this.\n    unregister(el) {\n        if (this.elementLink.has(el.element)) {\n            this.observer.unobserve(el.element);\n            this.elementLink.delete(el.element);\n        }\n    }\n    supported() {\n        return observerSupported();\n    }\n}\nObservableLinkHandler.ɵfac = function ObservableLinkHandler_Factory(t) { return new (t || ObservableLinkHandler)(ɵngcc0.ɵɵinject(ɵngcc1.RouterPreloader), ɵngcc0.ɵɵinject(PrefetchRegistry), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nObservableLinkHandler.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ObservableLinkHandler, factory: ObservableLinkHandler.ɵfac });\nObservableLinkHandler.ctorParameters = () => [\n    { type: RouterPreloader },\n    { type: PrefetchRegistry },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ObservableLinkHandler, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.RouterPreloader }, { type: PrefetchRegistry }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass PreloadLinkHandler {\n    constructor(loader, registry) {\n        this.loader = loader;\n        this.registry = registry;\n    }\n    register(el) {\n        this.registry.add(el.urlTree);\n        requestIdleCallback(() => this.loader.preload().subscribe(() => void 0));\n    }\n    unregister(_) { }\n    supported() {\n        return true;\n    }\n}\nPreloadLinkHandler.ɵfac = function PreloadLinkHandler_Factory(t) { return new (t || PreloadLinkHandler)(ɵngcc0.ɵɵinject(ɵngcc1.RouterPreloader), ɵngcc0.ɵɵinject(PrefetchRegistry)); };\nPreloadLinkHandler.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: PreloadLinkHandler, factory: PreloadLinkHandler.ɵfac });\nPreloadLinkHandler.ctorParameters = () => [\n    { type: RouterPreloader },\n    { type: PrefetchRegistry }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PreloadLinkHandler, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.RouterPreloader }, { type: PrefetchRegistry }]; }, null); })();\n\nclass LinkDirective {\n    constructor(linkHandlers, el, link, linkWithHref) {\n        this.linkHandlers = linkHandlers;\n        this.el = el;\n        this.linkHandler = this.linkHandlers.filter(h => h.supported()).shift();\n        this.rl = link || linkWithHref;\n        if (this.element && this.element.setAttribute) {\n            this.element.setAttribute('ngx-ql', '');\n        }\n    }\n    ngOnChanges(c) {\n        if (c.routerLink) {\n            this.linkHandler.unregister(this);\n            this.linkHandler.register(this);\n        }\n    }\n    ngOnDestroy() {\n        this.linkHandler.unregister(this);\n    }\n    get element() {\n        return this.el.nativeElement;\n    }\n    get urlTree() {\n        return this.rl.urlTree;\n    }\n}\nLinkDirective.ɵfac = function LinkDirective_Factory(t) { return new (t || LinkDirective)(ɵngcc0.ɵɵdirectiveInject(LinkHandler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RouterLink, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RouterLinkWithHref, 8)); };\nLinkDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: LinkDirective, selectors: [[\"\", \"routerLink\", \"\"]], inputs: { routerLink: \"routerLink\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nLinkDirective.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Inject, args: [LinkHandler,] }] },\n    { type: ElementRef },\n    { type: RouterLink, decorators: [{ type: Optional }] },\n    { type: RouterLinkWithHref, decorators: [{ type: Optional }] }\n];\nLinkDirective.propDecorators = {\n    routerLink: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LinkDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[routerLink]'\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Inject,\n                args: [LinkHandler]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.RouterLink, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.RouterLinkWithHref, decorators: [{\n                type: Optional\n            }] }]; }, { routerLink: [{\n            type: Input\n        }] }); })();\n\nclass QuicklinkStrategy {\n    constructor(registry, router) {\n        this.registry = registry;\n        this.router = router;\n        this.loading = new Set();\n    }\n    preload(route, load) {\n        if (this.loading.has(route)) {\n            // Don't preload the same route twice\n            return EMPTY;\n        }\n        const conn = typeof navigator !== 'undefined' ? navigator.connection : undefined;\n        if (conn) {\n            // Don't preload if the user is on 2G. or if Save-Data is enabled..\n            if ((conn.effectiveType || '').includes('2g') || conn.saveData)\n                return EMPTY;\n        }\n        // Prevent from preloading\n        if (route.data && route.data.preload === false) {\n            return EMPTY;\n        }\n        const fullPath = findPath(this.router.config, route);\n        if (this.registry.shouldPrefetch(fullPath)) {\n            this.loading.add(route);\n            return load();\n        }\n        return EMPTY;\n    }\n}\nQuicklinkStrategy.ɵfac = function QuicklinkStrategy_Factory(t) { return new (t || QuicklinkStrategy)(ɵngcc0.ɵɵinject(PrefetchRegistry), ɵngcc0.ɵɵinject(ɵngcc1.Router)); };\nQuicklinkStrategy.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: QuicklinkStrategy, factory: QuicklinkStrategy.ɵfac });\nQuicklinkStrategy.ctorParameters = () => [\n    { type: PrefetchRegistry },\n    { type: Router }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuicklinkStrategy, [{\n        type: Injectable\n    }], function () { return [{ type: PrefetchRegistry }, { type: ɵngcc1.Router }]; }, null); })();\nconst findPath = (config, route) => {\n    config = config.slice();\n    const parent = new Map();\n    const visited = new Set();\n    while (config.length) {\n        const el = config.shift();\n        visited.add(el);\n        if (el === route)\n            break;\n        let children = el.children || [];\n        const current = el._loadedConfig;\n        if (current && current.routes) {\n            children = children.concat(current.routes);\n        }\n        children.forEach((r) => {\n            if (visited.has(r))\n                return;\n            parent.set(r, el);\n            config.push(r);\n        });\n    }\n    let path = '';\n    let current = route;\n    while (current) {\n        if (isPrimaryRoute(current)) {\n            path = `/${current.path}${path}`;\n        }\n        else {\n            path = `/(${current.outlet}:${current.path}${path})`;\n        }\n        current = parent.get(current);\n    }\n    return path.replace(/\\/\\//, '/');\n};\nconst ɵ0$1 = findPath;\nfunction isPrimaryRoute(route) {\n    return route.outlet === PRIMARY_OUTLET || !route.outlet;\n}\n\nclass QuicklinkModule {\n}\nQuicklinkModule.ɵfac = function QuicklinkModule_Factory(t) { return new (t || QuicklinkModule)(); };\nQuicklinkModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: QuicklinkModule });\nQuicklinkModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        {\n            provide: LinkHandler,\n            useClass: ObservableLinkHandler,\n            multi: true\n        },\n        {\n            provide: LinkHandler,\n            useClass: PreloadLinkHandler,\n            multi: true\n        },\n        PrefetchRegistry,\n        QuicklinkStrategy\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QuicklinkModule, { declarations: [LinkDirective], exports: [LinkDirective] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuicklinkModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [LinkDirective],\n                providers: [\n                    {\n                        provide: LinkHandler,\n                        useClass: ObservableLinkHandler,\n                        multi: true\n                    },\n                    {\n                        provide: LinkHandler,\n                        useClass: PreloadLinkHandler,\n                        multi: true\n                    },\n                    PrefetchRegistry,\n                    QuicklinkStrategy\n                ],\n                exports: [LinkDirective]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QuicklinkModule, QuicklinkStrategy, LinkHandler as ɵa, ObservableLinkHandler as ɵb, PreloadLinkHandler as ɵc, PrefetchRegistry as ɵe, LinkDirective as ɵɵLinkDirective };\n\n//# sourceMappingURL=ngx-quicklink.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { Error404RoutingModule } from './error-404-routing.module';\nimport { Error404Component } from './error-404.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { IconModule } from '@visurel/iconify-angular';\n\n\n@NgModule({\n  declarations: [Error404Component],\n  imports: [\n    CommonModule,\n    Error404RoutingModule,\n    FlexLayoutModule,\n    IconModule\n  ]\n})\nexport class Error404Module {\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { QuicklinkModule } from 'ngx-quicklink';\nimport { Error404Component } from './error-404.component';\nimport { VexRoutes } from '../../../../@vex/interfaces/vex-route.interface';\n\n\nconst routes: VexRoutes = [\n  {\n    path: '',\n    component: Error404Component,\n    data: {\n      containerEnabled: true,\n      toolbarShadowEnabled: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule, QuicklinkModule]\n})\nexport class Error404RoutingModule {\n}\n"],"sourceRoot":"webpack:///"}